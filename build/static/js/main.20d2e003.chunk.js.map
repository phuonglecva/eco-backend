{"version":3,"sources":["assets/images/aic-logo.png","components/common/header.js","components/common/footer.js","assets/videos/intro.mp4","components/home/hero.js","components/home/about.js","assets/images/images/rr.PNG","assets/images/images/csph.PNG","assets/images/images/dhcl.PNG","assets/images/images/ktxh.PNG","assets/images/images/qdkt.PNG","assets/images/images/ptch.PNG","components/home/feature.js","components/home/works.js","components/home/faq.js","components/home/pricing.js","components/home/contact.js","views/home.js","components/login/LoginForm.js","components/graph/Canvas/CanvasDemo.js","components/graph/LineGraph/BaseLineGraph.js","components/graph/CpiLineGraph.js","components/graph/IipLineGraph.js","components/graph/ExportLineGraph.js","components/graph/ImportLineGraph.js","components/graph/ThuChiLineGraph.js","components/graph/BarGraph.js/Demo.js","components/graph/PieGraph/PieDemo.js","components/graph/UnEmpLineGraph.js","components/graph/StatisticGraph.js","components/graph/VisExample.js","components/report/BaseReport.js","components/graph/forecast_graph/BaseForecast.js","components/graph/forecast_graph/CpiForecast.js","components/graph/forecast_graph/ExportForecast.js","components/graph/forecast_graph/ImportForecast.js","components/graph/forecast_graph/IipForecast.js","components/report/ExportTable.js","components/report/CpiReport.js","components/report/IipReport.js","components/report/ImportReport.js","components/report/ExportReport.js","components/report/UnemploymentReport.js","components/report/ThuchiReport.js","components/report/FreqReport.js","components/common/submenu.js","App.js","assets/images/bg-color.jpg","reportWebVitals.js","index.js"],"names":["Link","Anchor","AppHeader","props","useState","visible","setVisible","className","href","id","src","Logo","targetOffset","onClick","event","obj","title","localStorage","clear","setToken","style","borderLeft","type","placement","closable","onClose","AppFooter","items","key","content","AppHero","state","showModal","setState","handleCancel","e","console","log","this","autoplay","map","item","color","size","to","onCancel","footer","destroyOnClose","width","centered","controls","autostart","autoPlay","Video","React","Component","icon","AppAbout","gutter","md","span","Meta","Card","AppFeature","paddingTop","textAlign","xs","sm","hoverable","cover","preview","height","alt","image1","image2","image3","image4","image5","image6","Panel","Collapse","AppFaq","defaultActiveKey","header","AppPricing","data","Input","TextArea","AppContact","orientation","bordered","dataSource","renderItem","Item","Text","mark","AppHome","NormalLoginForm","testUser","username","password","name","initialValues","remember","onFinish","values","user","setItem","alert","label","margin","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","CanvasDemo","barData","xAxis","yAxis","timeline","tempData","i","length","serieData","serieName","j","push","time","value","cat","config","isGroup","xField","yField","seriesField","position","fill","opacity","meta","alias","sales","slider","autoRotate","text","fontSize","fontWeight","layout","onReady","plot","on","evt","x","y","tooltipData","options","chart","getTooltipItems","padding","BaseLineGraph","graphType","setGraphType","checkList","setConfig","setCheckList","subData","refreshConfig","filter","tempBarData","useEffect","display","marginTop","fontFamily","textTransform","float","defaultValue","onChange","backgroundColor","onOk","val","idx","checked","LineGraph","Array","from","year","Math","random","setData","setBarData","setSubData","point","shape","stroke","lineWidth","grid","line","lineDash","alternateColor","tooltip","setResponseData","fetchData","useCallback","axios","then","response","cpi","cat_name","ti","month","cpi_data","parseFloat","toFixed","index","defaultData","defaultBarData","catch","error","IipLineGraph","iip","subs","forEach","iip_data","sub","ExportLineGraph","total_export","ImportLineGraph","total_import","ThuChiLineGraph","thu","setThu","thuTitle","chiTitle","formatter","v","concat","replace","s","nice","category","itemName","thuConfig","setThuConfig","thuchi_data","thu_data","reverse","chi_data","Demo","barName","setBarName","temp","Object","entries","marginRatio","cancelButtonProps","DemoPie","Option","Select","currrentData","setCurrentData","nu","nam","slice","appendPadding","angleField","colorField","radius","innerRadius","offset","_ref","percent","statistic","whiteSpace","overflow","textOverflow","interactions","marginBottom","marginLeft","UnEmpLineGraph","setTimeline","unemployment","unEmpData","unEmmType","typeName","index_name","valueWithType","regions","region","regionName","Graph","StatisticGraph","CpiLineGraph","letterFrequency","xMax","yMax","d","letter","frequency","xScale","scaleBand","range","round","domain","yScale","scaleLinear","max","compose","scale","accessor","BaseForecast","mixData","defaultAlpha","mixConfig","syncViewPadding","shared","showMarkers","showCrosshairs","offsetY","views","area","axes","unit","mask","sync","geometries","mapping","fillOpacity","forecastLine","paddingBottom","CpiForecast","setMixData","cpiForecastURL","getCPI","get","getCPIForecast","all","spread","allData","cpiData","forecastData","cpi_length","upper","lower","forcastTimeline","up","split","join","ExportForecast","a","importForecastURL","getImport","getImportForecast","exportData","importForecastData","exportForecast","export","forecastTimeline","addedId","ImportForecast","importData","importForecast","import","IipForecast","iipForecastUrl","getIip","getIipForecast","iipData","iipForecastData","iipForecast","timelen","t","tt","street","building","number","companyAddress","companyName","gender","_1_2019_last_month_value","ExportExcel","column","fileName","sheet_name","file","File","sheet","addSheet","depth","getDepth","columnNum","getColumns","rowArr","k","addRow","ele","addCell","init","columnLineArr","columnLine","dataSourceArr","dataTemp","dataIndex","row","setHeightCM","cell","hasOwnProperty","align","h","col","undefined","children","rowIndex","columnIndex","hCell","vMerge","childrenNum","arr","hMerge","rowCopy","eleDepths","isArray","reduce","accu","curr","saveAs","CpiReport","setMonth","setYear","toggle","setToggle","finalData","setFinalData","yearList","setYearList","monthList","setMonthList","fromMonth","setFromMonth","toMonth","setToMonth","fromYear","setFromYear","toYear","setToYear","columns","setColumns","timeType","url","year_list","month_list","fetchFromToData","setTimeType","Group","target","scroll","searchable","searchableProps","debounce","fuzzySearch","IipReport","columnsData","ImportReport","ExportReport","UnemploymentReport","ThuchiReport","FreqReport","accordion","SubMenu","Menu","Content","Layout","Header","Sider","Sub","selectedKey","setSelectedKey","setWidth","resData","at","err","showSubMenu","setShowSubMenu","collapsible","collapsed","onCollapse","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","minHeight","onSelect","DashboardOutlined","DatabaseOutlined","SettingFilled","ContainerOutlined","includes","CaretUpOutlined","CaretDownOutlined","Footer","App","token","getItem","LoginForm","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20d2e003.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/aic-logo.65897ddc.png\";","import Logo from '../../assets/images/aic-logo.png';\r\nimport React, { useState } from 'react';\r\n\r\nimport { Anchor, Drawer, Button, Image } from 'antd';\r\n\r\nconst { Link } = Anchor;\r\n\r\n\r\nfunction AppHeader(props) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\" >\r\n      <div className=\"header\">\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img id=\"img\" src={Logo} />\r\n          </a>\r\n        </div>\r\n        <div className=\"mobileHidden\">\r\n          <Anchor targetOffset=\"65\" onClick={(event, obj) => {\r\n            if (obj.title === 'Đăng xuất') {\r\n              localStorage.clear()\r\n              props.setToken(false)\r\n            }\r\n          }}>\r\n            <Link href=\"http://localhost:3000/#hero\" title=\"Trang chủ\" />\r\n            <Link href=\"http://localhost:3000/#about\" title=\"Về chúng tôi\" />\r\n            <Link href=\"http://localhost:3000/#feature\" title=\"Tính năng\" />\r\n            <Link href=\"http://localhost:3000/#faq\" title=\"Câu hỏi\" />\r\n            <Link href=\"http://localhost:3000/#contact\" title=\"Liên hệ\" />\r\n            <div style={{ borderLeft: \"1px solid gray\" }}>\r\n              <Link title=\"Đăng xuất\" />\r\n            </div>\r\n          </Anchor>\r\n        </div>\r\n        <div className=\"mobileVisible\">\r\n          <Button type=\"primary\" onClick={showDrawer}>\r\n            <i className=\"fas fa-bars\"></i>\r\n          </Button>\r\n          <Drawer\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n          >\r\n            <Anchor targetOffset=\"65\">\r\n              <Link href=\"http://localhost:3000/#hero\" title=\"Trang chủ\" />\r\n              <Link href=\"http://localhost:3000/#about\" title=\"Về chúng tôi\" />\r\n              <Link href=\"http://localhost:3000/#feature\" title=\"Tính năng\" />\r\n              <Link href=\"http://localhost:3000/#faq\" title=\"Câu hỏi\" />\r\n              <Link href=\"http://localhost:3000/#contact\" title=\"Liên hệ\" />\r\n              <div style={{ borderLeft: \"1px solid gray\" }}>\r\n                <Link title=\"Đăng xuất\" />\r\n              </div>\r\n            </Anchor>\r\n          </Drawer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport { BackTop } from 'antd';\r\n\r\nfunction AppFooter() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"footer\">\r\n        <div className=\"logo\">\r\n          <i className=\"fas fa-bolt\"></i>\r\n          <a href=\"http://google.com\">AIC TECHNOLOGY</a>\r\n        </div>\r\n        <ul className=\"socials\">\r\n          <li><a href=\"https://www.facebook.com/\"><i className=\"fab fa-facebook-f\"></i></a></li>\r\n          <li><a href=\"https://www.twitter.com/\"><i className=\"fab fa-twitter\"></i></a></li>\r\n          <li><a href=\"https://www.linkedin.com/\"><i className=\"fab fa-linkedin-in\"></i></a></li>\r\n          <li><a href=\"https://www.pinterest.com/\"><i className=\"fab fa-pinterest-p\"></i></a></li>\r\n          <li><a href=\"https://www.instagram.com/\"><i className=\"fab fa-instagram\"></i></a></li>\r\n        </ul>\r\n        <div className=\"copyright\">Copyright &copy; 2021 Tech</div>\r\n        <BackTop>\r\n          <div className=\"goTop\"><i className=\"fas fa-arrow-circle-up\"></i></div>\r\n        </BackTop>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppFooter;","export default __webpack_public_path__ + \"static/media/intro.614bc7d2.mp4\";","import React from 'react';\r\nimport { Button, Modal } from 'antd';\r\n\r\nimport { Carousel } from 'antd';\r\nimport Video from '../../assets/videos/intro.mp4'\r\nimport { Link } from 'react-router-dom';\r\nconst items = [\r\n  {\r\n    key: '1',\r\n    title: 'Dự báo kiến tạo tương lai',\r\n    content: 'Phần mềm dự báo - Ban R&D - AIC Group',\r\n  },\r\n]\r\n\r\nclass AppHero extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  render() {\r\n    const { setToken } = this.props;\r\n\r\n    return (\r\n      <div id=\"hero\" className=\"heroBlock\">\r\n        <Carousel autoplay>\r\n          {items.map(item => {\r\n            return (\r\n              <div key={item.key} className=\"container-fluid\">\r\n                <div className=\"content\" style={{ color: \"white\" }}>\r\n                  <h3 style={{ color: \"white\" }}>{item.title}</h3>\r\n                  <p>{item.content}</p>\r\n                  <div className=\"btnHolder\">\r\n                    <Button type=\"primary\" size=\"large\">\r\n                      <Link to='/sub-menu'>Bắt đầu</Link>\r\n                    </Button>\r\n                    <Modal\r\n                      title=\"Giới thiệu phần mêm dự báo\"\r\n                      visible={this.state.visible}\r\n                      onCancel={this.handleCancel}\r\n                      footer={null}\r\n                      destroyOnClose={true}\r\n                      width={900}\r\n                      centered\r\n                    >\r\n                      <video style={{width:\"100%\"}} controls autostart autoPlay src={Video} type=\"video/mp4\" />\r\n                    </Modal>\r\n                    <Button size=\"large\" onClick={this.showModal}>\r\n                      Video giới thiệu\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Carousel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHero;","import React from 'react';\r\n\r\nimport { Row, Col, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst items = [\r\n  {\r\n    key: '1',\r\n    icon: <i className=\"fas fa-chart-pie\"></i>,\r\n    title: 'Tập đoàn',\r\n    content: 'Aic group là tập đoàn đã thực hiện rất nhiều những dự án liên quan đến chuyển đổi số và thành phố thông minh, đóng góp lớn vào trong tiến trình phát triển của đất nước',\r\n  },\r\n  {\r\n    key: '2',\r\n    icon: <i className=\"fas fa-desktop\"></i>,\r\n    title: 'Nhóm nghiên cứu',\r\n    content: 'Nhóm chúng tôi gồm các thành viên có nhiều năm kinh nghiệm trong lĩnh vực công nghệ thông tin, dưới sự hướng dẫn của các chuyên gia hàng đầu đến từ các trường  đại học và viện nghiên cứu trên cả nước',\r\n  },\r\n  // {\r\n  //   key: '3',\r\n  //   icon: <i className=\"fas fa-database\"></i>,\r\n  //   title: 'Simplified Workflow',\r\n  //   content: 'cu nostro dissentias consectetuer mel. Ut admodum conceptam mei, cu eam tation fabulas abhorreant. His ex mandamus.',\r\n  // },\r\n]\r\n\r\nfunction AppAbout() {\r\n  return (\r\n    <div id=\"about\" className=\"block aboutBlock\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"titleHolder\">\r\n          <h2>About Us</h2>\r\n          <p>Ban nghiên cứu và phát triển aic group</p>\r\n        </div>\r\n        <div className=\"contentHolder\">\r\n          <p>Tiên phong trong lĩnh vực chuyển đổi số và thành phố thông minh</p>\r\n        </div>\r\n        <Row gutter={[16, 16]}>   \r\n          {items.map(item => {\r\n            return (\r\n              <Col md={{ span: 12 }} key={item.key}>\r\n                <div className=\"content\">\r\n                  <div className=\"icon\">\r\n                    {item.icon}\r\n                  </div>\r\n                  <h3>{item.title}</h3>\r\n                  <p>{item.content}</p>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppAbout;","export default __webpack_public_path__ + \"static/media/rr.e7e485df.PNG\";","export default __webpack_public_path__ + \"static/media/csph.648430bb.PNG\";","export default __webpack_public_path__ + \"static/media/dhcl.16cc2e17.PNG\";","export default __webpack_public_path__ + \"static/media/ktxh.e74a9174.PNG\";","export default __webpack_public_path__ + \"static/media/qdkt.ac25fbfa.PNG\";","export default __webpack_public_path__ + \"static/media/ptch.59e843eb.PNG\";","import React from 'react';\r\n\r\nimport image1 from '../../assets/images/images/rr.PNG';\r\nimport image2 from '../../assets/images/images/csph.PNG';\r\nimport image3 from '../../assets/images/images/dhcl.PNG';\r\nimport image4 from '../../assets/images/images/ktxh.PNG';\r\nimport image5 from '../../assets/images/images/qdkt.PNG';\r\nimport image6 from '../../assets/images/images/ptch.PNG';\r\n\r\nimport { Row, Col, Image } from 'antd';\r\nimport { Card } from 'antd';\r\nconst { Meta } = Card;\r\n\r\nfunction AppFeature() {\r\n  return (\r\n    <div id=\"feature\" className=\"block featureBlock bgGray\" style={{paddingTop:\"30px\"}}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"titleHolder\">\r\n          <h2>Key Features and Benefits</h2>\r\n          <p>Các tính năng và lợi ích của phần mềm dự báo</p>\r\n        </div>\r\n        <Row style={{textAlign:\"center\"}} gutter={[16, 16]}>\r\n          <Col  xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 8 }}>\r\n            <Card\r\n              hoverable\r\n              cover={<Image preview={false} width={100} height={100} alt=\"Modern Design\" src={image1} />}\r\n            >\r\n              <Meta title=\"Phân tích rủi ro và thách thức\" />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 8 }}>\r\n            <Card\r\n              hoverable\r\n              cover={<Image preview={false} width={100} height={100} alt=\"Test\" src={image2} />}\r\n            >\r\n              <Meta title=\"Phân tích cơ hội tiềm năng\" />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 8 }}>\r\n            <Card\r\n              hoverable\r\n              cover={<Image preview={false} width={100} height={100} alt=\"Test\" src={image3} />}\r\n            >\r\n              <Meta title=\"Đánh giá tình hình kinh tế xã hội\" />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 8 }}>\r\n            <Card\r\n              hoverable\r\n              cover={<Image preview={false} width={100} height={100} alt=\"Test\" src={image4} />}\r\n            >\r\n              <Meta title=\"Định hướng chiến lược\" />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 8 }}>\r\n            <Card\r\n              hoverable\r\n              cover={<Image preview={false} width={100} height={100} alt=\"Test\" src={image5} />}\r\n            >\r\n              <Meta title=\"Chính sách phù hợp\" />\r\n            </Card>\r\n          </Col>\r\n          <Col xs={{ span: 24 }} sm={{ span: 12 }} md={{ span: 8 }}>\r\n            <Card\r\n              hoverable\r\n              cover={<Image preview={false} width={100} height={100} alt=\"Test\" src={image6} />}\r\n            >\r\n              <Meta title=\"Quyết định chính xác\" />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppFeature;","import React from 'react';\r\n\r\nimport { Button, Modal } from 'antd';\r\nimport Video from '../../assets/videos/intro.mp4'\r\n\r\nclass AppWorks extends React.Component {\r\n  state = { visible: false };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"works\" className=\"block worksBlock\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"titleHolder\">\r\n            <h2>How it works</h2>\r\n            <p>Hướng dẫn sử dụng phần mềm dự báo</p>\r\n          </div>\r\n          <div className=\"contentHolder\">\r\n            <Button size=\"large\" onClick={this.showModal}><i className=\"fas fa-play\"></i></Button>\r\n          </div>\r\n          <Modal\r\n            title=\"Forecast Tutorial\"\r\n            visible={this.state.visible}\r\n            onCancel={this.handleCancel}\r\n            footer={null}\r\n            destroyOnClose = {true}\r\n          >\r\n             <video style={{width:\"100%\"}} controls autostart autoPlay src={Video} type=\"video/mp4\" />\r\n            {/* <iframe title=\"Woocommerce Tutorial\" width=\"100%\" height=\"350\" src=\"https://www.youtube.com/embed/8f8_JYIzOno?list=PLiUrl-SQRR7LQINGQGE99pXWDuKq4SxfU\"></iframe> */}\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppWorks;","import React from 'react';\r\n\r\nimport { Collapse } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction AppFaq() {\r\n  return(\r\n    <div id=\"faq\" className=\"block faqBlock\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"titleHolder\">\r\n          <h2>Frequently Asked Questions</h2>\r\n          <p>Các câu hỏi thường gặp</p>\r\n        </div>\r\n        <Collapse defaultActiveKey={['1']}>\r\n          <Panel header=\"Cách đăng ký tài khoản?\" key=\"1\">\r\n            <p>Ut per tempor latine fuisset, cu quod posidonium vix. Mei cu erant bonorum, te ius vide maiorum hendrerit. In alii instructior vix, vis et elit maluisset, usu recusabo atomorum ut. Nibh diceret dolores vix et, id omnis adhuc maiestatis vim, ei mel legendos mnesarchum argumentum. Semper nusquam urbanitas sea te.</p>\r\n          </Panel>\r\n          <Panel header=\"Cách cập nhập dữ liệu dự báo?\" key=\"2\">\r\n            <p>Postea ceteros corrumpit ius te, eos epicuri intellegebat consequuntur et. Sint quot suscipiantur ea nam. Nam pericula evertitur ut, per et quod nostro, autem augue id has. Virtute epicurei quo te, pri et novum essent senserit.</p>\r\n          </Panel>\r\n          <Panel header=\"Cách thay đổi và cấu hình mô hình?\" key=\"3\">\r\n            <p>Eu veritus ancillae suavitate per, cum in appellantur efficiantur. Eum cu clita ponderum lobortis, usu dicat exerci et, eam alii oblique interesset ea. Suas quidam volumus id eam, id populo euripidis temporibus pri. At eum quas putent iriure, fugit tritani sed ad. Per ad magna possim aliquam, est aeque exerci verear an, qui cu modus audire detraxit. Duo ne nostro rationibus, nam mutat omittam evertitur ad, meliore gubergren voluptatum at mel.</p>\r\n          </Panel>\r\n        </Collapse>\r\n        {/* <div className=\"quickSupport\">\r\n          <h3>Want quick support?</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur velit necessitatibus praesentium aliquid eos in neque recusandae, incidunt esse dolore voluptatum nesciunt quod soluta consequuntur voluptatibus ab excepturi nobis! Porro!</p>\r\n          <Button type=\"primary\" size=\"large\"><i className=\"fas fa-envelope\"></i> Email your question</Button>\r\n        </div> */}\r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default AppFaq;","import React from 'react';\r\n\r\nimport { List, Card, Button } from 'antd';\r\n\r\nconst data = [\r\n  {\r\n    title: 'Basic',\r\n    content: [\r\n      {\r\n        price: '£29.99',\r\n        space: '1 GB of space',\r\n        user: '1 user',\r\n        support: '24/7 support',\r\n        backup: 'Safe, reliable backup',\r\n        access: 'Access from anywhere'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Premium',\r\n    content: [\r\n      {\r\n        price: '£59.99',\r\n        space: '5 GB of space',\r\n        user: '5 users',\r\n        support: '24/7 support',\r\n        backup: 'Safe, reliable backup',\r\n        access: 'Access from anywhere'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: 'Enterprise',\r\n    content: [\r\n      {\r\n        price: '£99.99',\r\n        space: 'Unlimited space',\r\n        user: '15 users',\r\n        support: '24/7 support',\r\n        backup: 'Safe, reliable backup',\r\n        access: 'Access from anywhere'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nfunction AppPricing() {\r\n  return (\r\n    <div id=\"pricing\" className=\"block pricingBlock bgGray\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"titleHolder\">\r\n          <h2>Choose a plan to fit your needs</h2>\r\n          <p>Debitis itaque minima dolorum fuga aperiam inventore, quidem enim</p>\r\n        </div>\r\n        <List\r\n          grid={{\r\n            gutter: 16,\r\n            xs: 1,\r\n            sm: 1,\r\n            md: 3,\r\n            lg: 3,\r\n            xl: 3,\r\n            xxl: 3,\r\n          }}\r\n          dataSource={data}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <Card title={item.title}>\r\n                <p className=\"large\">{item.content[0].price}</p>\r\n                <p>{item.content[0].space}</p>\r\n                <p>{item.content[0].user}</p>\r\n                <p>{item.content[0].support}</p>\r\n                <p>{item.content[0].backup}</p>\r\n                <p>{item.content[0].access}</p>\r\n                <Button type=\"primary\" size=\"large\"><i className=\"fab fa-telegram-plane\"></i> Get Started</Button>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default AppPricing;","import React from 'react';\r\nimport { List, Typography, Divider } from 'antd';\r\n\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nconst { TextArea } = Input;\r\nconst data = [\r\n  'Phone: (+84)23 4324 1241',\r\n  'Email: contact@aicgroup.com',\r\n  'Website: aicgroup.com',\r\n];\r\n\r\n\r\nfunction AppContact() {\r\n  return (\r\n    <div >\r\n      <Divider id=\"contact\" orientation=\"center\">Contact</Divider>\r\n      <List\r\n       style={{textAlign:\"center\"}}\r\n        bordered\r\n        dataSource={data}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <Typography.Text mark /> {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppContact;","import React from 'react';\r\n\r\nimport AppHero from '../components/home/hero';\r\nimport AppAbout from '../components/home/about';\r\nimport AppFeature from '../components/home/feature';\r\nimport AppWorks from '../components/home/works';\r\nimport AppFaq from '../components/home/faq';\r\nimport AppPricing from '../components/home/pricing';\r\nimport AppContact from '../components/home/contact';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nfunction AppHome(props) {\r\n  return (\r\n    <div className=\"main\">\r\n      <AppHero setToken={props.setToken} />\r\n      <AppAbout/>\r\n      <AppFeature/>\r\n      <AppFaq/>\r\n      <AppContact/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHome;","import { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport '../css/Login.css'\r\nconst NormalLoginForm = (props) => {\r\n    const testUser = [\r\n        {\r\n            username: 'phuonglecva',\r\n            password: '1111'\r\n        },\r\n        {\r\n            username: 'haland2k2',\r\n            password: '1111'\r\n        },\r\n        {\r\n            username: 'messi30',\r\n            password: '1111'\r\n        },\r\n        {\r\n            username: 'ronaldo7',\r\n            password: '1111'\r\n        },\r\n    ]\r\n    const onFinish = (values) => {\r\n        const {username, password} = values\r\n        for(let user of testUser) {\r\n            if ((user.username ===  username) && (user.password === password)) {\r\n                props.setToken(true)\r\n                localStorage.setItem(\"token\", true)\r\n                return \r\n            }\r\n        }\r\n        alert(`User not found.`)\r\n    };\r\n    return (\r\n        <div className=\"wrapper-login-form\">\r\n\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n            >\r\n                <Form.Item name=\"title\">\r\n                    <h1>Đăng nhập</h1>\r\n                </Form.Item>\r\n                <Form.Item label=\"Tên đăng nhập\" style={{ margin: \"0px\" }} />\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Tên đăng nhập\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Mật khẩu\" style={{ margin: \"0px\" }} />\r\n                <Form.Item\r\n                    name=\"password\"\r\n                // rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Mật khẩu\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        {/* <Checkbox>Remember me</Checkbox> */}\r\n                    </Form.Item>\r\n\r\n                    <a className=\"login-form-forgot\" href=\"\">\r\n                        Quên mật khẩu\r\n                    </a>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Đăng nhập\r\n                    </Button>\r\n                    Hoặc <a href=\"\">Đăng ký</a>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NormalLoginForm;","import React from 'react';\r\nimport { Column } from '@ant-design/charts';\r\nimport { Timeline } from 'antd';\r\n\r\nconst CanvasDemo = (props) => {\r\n    console.log(props)\r\n    const { barData, xAxis, yAxis } = props\r\n    const { data, timeline } = barData\r\n\r\n    let tempData = []\r\n    for (let i = 0; i < data.length; i++) {\r\n        let serieData = data[i].data\r\n        let serieName = data[i].name\r\n        for (let j = 0; j < timeline.length; j++) {\r\n            tempData.push({\r\n                time: timeline[j],\r\n                value: serieData[j],\r\n                cat: serieName\r\n            })\r\n        }\r\n    }\r\n    console.log(tempData)\r\n\r\n    const config = {\r\n        isGroup: true,\r\n        data: tempData,\r\n        xField: 'time',\r\n        yField: 'value',\r\n        seriesField: 'cat',\r\n        label: {\r\n            position: 'middle',\r\n            style: {\r\n                fill: '#FFFFFF',\r\n                opacity: 0.6,\r\n            },\r\n        },\r\n        meta: {\r\n            type: { alias: 'Category' },\r\n            sales: { alias: 'Sales' },\r\n            value: { alias: 'Chỉ số giá' },\r\n            time: { alias: 'Tháng' }\r\n        },\r\n        slider: {},\r\n        xAxis: {\r\n            autoRotate: true,\r\n            title: {\r\n                text: xAxis.title.text,\r\n                style: {\r\n                    fontSize: 15,\r\n                    fontWeight: 555\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n\r\n            title: {\r\n                text: yAxis.title.text,\r\n                style: {\r\n                    fontSize: 15,\r\n                    fontWeight: 555,\r\n                }\r\n            }\r\n        },\r\n        label: {\r\n            position: 'middle',\r\n            layout: [\r\n                { type: 'interval-adjust-position' },\r\n                { type: 'interval-hide-overlap' },\r\n                { type: 'adjust-color' },\r\n            ],\r\n        },\r\n        // scrollbar: { type: 'horizontal' },\r\n        legend: {\r\n            layout: 'horizontal',\r\n            position: 'bottom'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Column\r\n            {...config}\r\n            onReady={(plot) => {\r\n                plot.on('plot:click', (evt) => {\r\n                    const { x, y } = evt;\r\n                    const { xField } = plot.options;\r\n                    const tooltipData = plot.chart.getTooltipItems({ x, y });\r\n                    console.log(tooltipData);\r\n                });\r\n            }}\r\n            style={{ width: \"100%\", padding: \"10px\", height:\"55vh\" }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CanvasDemo;","import { Line } from '@ant-design/charts';\r\nimport { Modal, Select, Button, Radio } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts'\r\nimport CanvasDemo from '../Canvas/CanvasDemo';\r\nconst BaseLineGraph = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const [graphType, setGraphType] = useState(\"line\")\r\n    const { config, data, barData, checkList, setConfig, setCheckList, subData } = props\r\n    console.log(props)\r\n    const refreshConfig = () => {\r\n        if (data && barData) {\r\n            let tempData = data.filter((value) => {\r\n                const key = value.key\r\n                console.log(key)\r\n                return checkList[key] == true\r\n            })\r\n            let tempBarData = barData.data.filter((value) => {\r\n                const key = value.key\r\n                // console.log(key)\r\n                return checkList[key] == true\r\n            })\r\n            setConfig({ ...config, data: tempData, barData: { ...barData, data: tempBarData } })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        refreshConfig()\r\n    }, [checkList])\r\n    return (\r\n        <div style={{ width: \"100%\", textAlign: \"center\", display: \"inline-block\", }}>\r\n            <h2 style={{ color: \"#34568B\", marginTop: \"20px\", fontFamily: 'Georgia, Times, \"Times New Roman\", self-serif', textTransform: \"uppercase\", fontWeight: \"bolder\" }}>{props.title}</h2>\r\n            <div className=\"graph-area\">\r\n                <Button style={{ float: \"left\", margin: \"5px\" }} onClick={() => setVisible(true)}>Chọn chỉ tiêu</Button>\r\n                <Select defaultValue={graphType} onChange={setGraphType} style={{ float: \"right\", margin: \"5px\", backgroundColor: \"red\" }}>\r\n                    <Select value=\"line\" >Biểu đồ đường</Select>\r\n                    <Select value=\"bar\" >Biểu đồ cột</Select>\r\n                </Select>\r\n                <div style={{ clear: 'both' }}>\r\n                    <div className=\"line-graph\">\r\n                        {(graphType === 'line') && <Line {...config} />}\r\n                        {(graphType === 'bar') && <CanvasDemo {...config} />}\r\n                    </div>\r\n                    {/* {(graphType === 'bar') && <BaseBarGraph {...config} />} */}\r\n                    <Modal\r\n                        title=\"Chọn chỉ tiêu\"\r\n                        centered\r\n                        visible={visible}\r\n                        // onCancel={() => setVisible(false)}\r\n                        onOk={() => {\r\n                            console.log(checkList)\r\n                            refreshConfig()\r\n                            setVisible(false)\r\n                        }}\r\n                        width={500}\r\n                    >\r\n\r\n                        <ul>\r\n                            {subData.map((val, idx) => {\r\n                                return (\r\n                                    <li key={idx} onClick={(e) => {\r\n                                        setCheckList(checkList.map((val, i) => {\r\n                                            return (i === idx) ? !val : val\r\n                                        }))\r\n                                        // console.log(checkList)\r\n                                    }}>\r\n                                        <Radio checked={checkList[idx]} />\r\n                                        <a>{val.name}</a></li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseLineGraph;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport BaseBarGraph from './StatisticBarGraph/BarBaseGraph';\r\nimport { Button, Radio, Select } from 'antd';\r\nimport BaseLineGraph from './LineGraph/BaseLineGraph';\r\nimport '../css/LineGraph.css'\r\nimport CanvasDemo from './Canvas/CanvasDemo';\r\nimport { Modal } from 'antd'\r\n\r\nconst LineGraph = (props) => {\r\n  const [data, setData] = useState(Array.from({ length: 30 }, (x, i) => ({ year: 2000 + i, value: Math.random() })))\r\n  const [barData, setBarData] = useState()\r\n  const [subData, setSubData] = useState([])\r\n  const [checkList, setCheckList] = useState([])\r\n  const [config, setConfig] = useState({\r\n    data: data,\r\n    height: 300,\r\n    xField: 'month',\r\n    yField: 'cpi_data',\r\n    seriesField: \"cat\",\r\n    point: {\r\n      size: 3,\r\n      shape: 'diamond',\r\n      style: {\r\n        fill: 'white',\r\n        stroke: '#5B8FF9',\r\n        lineWidth: 2,\r\n      },\r\n    },\r\n    xAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Tháng\",\r\n        style: { fontSize: 10 },\r\n      }\r\n    },\r\n    yAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Giá trị (%)\",\r\n        style: { fontSize: 12 },\r\n      }\r\n    },\r\n    slider: {},\r\n    label: true,\r\n    barData: {\r\n      timeline: [],\r\n      data: []\r\n    },\r\n    title: \"Biểu đồ chỉ số giá tiêu dùng\",\r\n    tooltip: {\r\n      // showCrosshairs:true\r\n    }\r\n  })\r\n  let [responseData, setResponseData] = React.useState(null);\r\n  const fetchData = React.useCallback(() => {\r\n    axios({\r\n      \"method\": \"GET\",\r\n      \"url\": \"https://aic-group.bike/api/v1/dong-nai/cpies\",\r\n      \"headers\": {\r\n        \"content-type\": \"application/json\",\r\n      }, \"params\": {\r\n        \"language_code\": \"en\"\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data)\r\n        const d = response.data\r\n        const { cpi, timeline } = d.data\r\n        setSubData(cpi)\r\n        let checkList = (Array.from({ length: cpi.length }, i => false))\r\n        checkList[0] = true\r\n        setCheckList(checkList)\r\n        let data = []\r\n\r\n        for (let idx = 0; idx < cpi.length; idx++) {\r\n\r\n          let tempData = cpi[idx]\r\n          let cat_name = tempData.name\r\n          let val = tempData.val\r\n          for (let i = 0; i < timeline.length; i++) {\r\n            let ti = timeline[i]\r\n            data.push({\r\n              month: ti,\r\n              cat: cat_name,\r\n              cpi_data: parseFloat((parseFloat(val[i]) - 100).toFixed(2)),\r\n              key: idx\r\n            })\r\n          }\r\n        }\r\n        setData(data)\r\n        let barData = {\r\n          timeline: timeline,\r\n          // data: [\r\n          //   { name: \"Dữ liệu cpi\", data: data.map(val => val.cpi_data) },\r\n          // ]\r\n          data: cpi.map((value, index) => ({\r\n            name: value.name,\r\n            data: value.val.map((val) => parseFloat((parseFloat(val) - 100).toFixed(2))),\r\n            key: index\r\n          }))\r\n        }\r\n        setBarData(barData)\r\n        const defaultData = data.filter((val) => val.key === 0)\r\n        const defaultBarData = barData.data.filter((val) => val.key === 0)\r\n        // setCheckList(checkList.map((_, id)=> id == 0))\r\n        setConfig({ ...config, data: defaultData, barData: { ...barData, data: defaultBarData } })\r\n\r\n        console.log('cpi data', data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n\r\n  React.useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n  return (\r\n    <BaseLineGraph\r\n      title=\"Chỉ số giá tiêu dùng\"\r\n      subData={subData}\r\n      config={config}\r\n      setConfig={setConfig}\r\n      data={data}\r\n      barData={barData}\r\n      checkList={checkList}\r\n      setCheckList={setCheckList} />\r\n  )\r\n};\r\nexport default LineGraph;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport { Select } from 'antd'\r\nimport BaseBarGraph from './StatisticBarGraph/BarBaseGraph';\r\nimport BaseLineGraph from './LineGraph/BaseLineGraph';\r\nimport '../css/LineGraph.css';\r\nimport CanvasDemo from './Canvas/CanvasDemo';\r\n\r\nconst IipLineGraph = (props) => {\r\n  const [data, setData] = useState(Array.from({ length: 30 }, (x, i) => ({ year: 2000 + i, value: Math.random() })))\r\n  const [barData, setBarData] = useState()\r\n  const [subData, setSubData] = useState([])\r\n  const [checkList, setCheckList] = useState([])\r\n  const title = \"Chỉ số sản xuất toàn ngành công nghiệp\"\r\n\r\n  const [config, setConfig] = useState({\r\n    data,\r\n    height: 300,\r\n    xField: 'month',\r\n    yField: 'iip_data',\r\n    seriesField: \"cat\",\r\n    point: {\r\n      size: 3,\r\n      shape: 'diamond',\r\n      style: {\r\n        fill: 'white',\r\n        stroke: '#5B8FF9',\r\n        lineWidth: 2,\r\n      },\r\n    },\r\n    xAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Tháng\",\r\n        style: { fontSize: 10 },\r\n      }\r\n    },\r\n    yAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Giá trị (%)\",\r\n        style: { fontSize: 12 },\r\n      }\r\n    },\r\n    slider: {},\r\n    label: true,\r\n    barData: {\r\n      timeline: [],\r\n      data: []\r\n    },\r\n    title: \"Biểu đồ chỉ số sản xuất công nghiệp\"\r\n  })\r\n  let [responseData, setResponseData] = React.useState('');\r\n  const fetchData = React.useCallback(() => {\r\n    axios({\r\n      \"method\": \"GET\",\r\n      \"url\": \"https://aic-group.bike/api/v1/dong-nai/iips\",\r\n      \"headers\": {\r\n        \"content-type\": \"application/json\",\r\n      }, \"params\": {\r\n        \"language_code\": \"en\"\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data)\r\n        const d = response.data\r\n        const { iip, timeline, subs } = d.data\r\n        const subData = [{\r\n          name: \"Chỉ số sản xuất toàn ngành công nghiệp\",\r\n          val: iip\r\n        }]\r\n        subs.forEach((val, id) => {\r\n          subData.push({\r\n            name: val.name,\r\n            val: val.value\r\n          })\r\n        })\r\n        setSubData(subData)\r\n        let checkList = (Array.from({ length: subs.length }, i => false))\r\n        checkList = [true, ...checkList]\r\n        setCheckList(checkList)\r\n\r\n        let data = []\r\n        iip.forEach((val, index) => {\r\n          data.push({\r\n            month: timeline[index],\r\n            iip_data: parseFloat(val),\r\n            cat: title,\r\n            key: 0\r\n          })\r\n        })\r\n\r\n        subs.forEach((sub, idx) => {\r\n          sub.value.forEach((val, id) => {\r\n            data.push({\r\n              month: timeline[id],\r\n              iip_data: parseFloat(val),\r\n              cat: sub.name,\r\n              key: idx + 1\r\n            })\r\n          })\r\n        })\r\n        setData(data)\r\n        let barData = {\r\n          timeline: timeline,\r\n          // data: [\r\n          //   { name: \"Chỉ số iip\", data: data.map(val => val.iip_data) }\r\n          // ]\r\n          data: [\r\n            {\r\n              name: title,\r\n              data: iip,\r\n              key: 0\r\n\r\n            }\r\n          ]\r\n        }\r\n\r\n        subs.forEach((sub, idx) => {\r\n          barData.data.push({\r\n            name: sub.name,\r\n            data: sub.value,\r\n            key: idx + 1\r\n          })\r\n        })\r\n        setBarData(barData)\r\n\r\n        // set default data\r\n        const defaultData = data.filter((val) => val.key === 0)\r\n        const defaultBarData = barData.data.filter((val) => val.key === 0)\r\n        setConfig({ ...config, data: defaultData, barData: { ...barData, data: defaultBarData } })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  React.useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n  return (\r\n    // <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n    //   <div className=\"graph-area\" >\r\n\r\n    //     <Select defaultValue={graphType} onChange={setGraphType} style={{ float: \"right\", margin: \"5px\" }}>\r\n    //       <Select value=\"line\">Biểu đồ đường</Select>\r\n    //       <Select value=\"bar\">Biểu đồ cột</Select>\r\n    //     </Select>\r\n    //     <div style={{ clear: 'both' }}>\r\n    //       {/* {(graphType === 'line') && <BaseLineGraph {...config} />} */}\r\n    //       {/* {(graphType === 'bar') && <BaseBarGraph {...config} />} */}\r\n    //       <div className=\"line-graph\">\r\n    //         {(graphType === 'line') && <Line {...config} />}\r\n    //         {(graphType === 'bar') && <CanvasDemo {...config} />}\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    <BaseLineGraph\r\n      title=\"Chỉ số sản xuất công nghiệp\"\r\n      subData={subData}\r\n      config={config}\r\n      setConfig={setConfig}\r\n      data={data}\r\n      barData={barData}\r\n      checkList={checkList}\r\n      setCheckList={setCheckList} />\r\n  )\r\n};\r\nexport default IipLineGraph;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios';\r\nimport { Select } from 'antd';\r\nimport BaseBarGraph from './StatisticBarGraph/BarBaseGraph';\r\nimport '../css/LineGraph.css';\r\nimport BaseLineGraph from './LineGraph/BaseLineGraph';\r\nimport CanvasDemo from '../graph/Canvas/CanvasDemo'\r\n\r\nconst ExportLineGraph = (props) => {\r\n  const [data, setData] = useState(Array.from({ length: 30 }, (x, i) => ({ year: 2000 + i, value: Math.random() })))\r\n  const [config, setConfig] = useState({\r\n    data,\r\n    height: 300,\r\n    xField: 'month',\r\n    yField: 'value',\r\n    point: {\r\n      size: 3,\r\n      shape: 'diamond',\r\n      style: {\r\n        fill: 'white',\r\n        stroke: '#5B8FF9',\r\n        lineWidth: 2,\r\n      },\r\n    },\r\n    xAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Tháng\",\r\n        style: { fontSize: 16 },\r\n      }\r\n    },\r\n    yAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Giá trị (tỷ đồng)\",\r\n        style: { fontSize: 16 },\r\n      }\r\n    },\r\n    slider: {},\r\n    label: false,\r\n    barData: {\r\n      timeline: [],\r\n      data: []\r\n    },\r\n    title: props.title\r\n  })\r\n  let [responseData, setResponseData] = React.useState('');\r\n  const fetchData = React.useCallback(() => {\r\n    axios({\r\n      \"method\": \"GET\",\r\n      \"url\": \"https://aic-group.bike/api/v1/dong-nai/export\",\r\n      \"headers\": {\r\n        \"content-type\": \"application/json\",\r\n      }, \"params\": {\r\n        \"language_code\": \"en\"\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data)\r\n        const d = response.data\r\n        const { timeline, total_export } = d.data\r\n        let data = []\r\n        total_export.value.forEach((value, index) => {\r\n          data.push({\r\n            month: timeline[index],\r\n            value: value\r\n          })\r\n        })\r\n        setData(data)\r\n        const barData = {\r\n          timeline,\r\n          data: [\r\n            { name: \"Kim ngạch xuất khẩu\", data: data.map((value) => value.value) }\r\n          ]\r\n        }\r\n        setConfig({ ...config, data, barData: barData })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  React.useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n  const [graphType, setGraphType] = useState(\"line\");\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n      <h2 style={{ color: \"#34568B\", marginTop: \"20px\", fontFamily: 'Georgia, Times, \"Times New Roman\", self-serif', textTransform: \"uppercase\", fontWeight: \"bolder\" }}>Kim ngạch nhập khẩu</h2>\r\n\r\n      <div className=\"graph-area\">\r\n        <Select defaultValue={graphType} onChange={setGraphType} style={{ float: \"right\", margin: \"5px\" }}>\r\n          <Select value=\"line\">Biểu đồ đường</Select>\r\n          <Select value=\"bar\">Biểu đồ cột</Select>\r\n        </Select>\r\n        <div style={{ clear: \"both\" }}>\r\n          {/* {(graphType === 'line') && <BaseLineGraph {...config} />}; */}\r\n          {/* {(graphType === 'bar') && <BaseBarGraph {...config} />} */}\r\n          <div className=\"line-graph\">\r\n            {(graphType === 'line') && <Line {...config} />}\r\n            {(graphType === 'bar') && <CanvasDemo {...config} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default ExportLineGraph;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport { Select } from 'antd';\r\nimport BaseBarGraph from './StatisticBarGraph/BarBaseGraph';\r\nimport BaseLineGraph from './LineGraph/BaseLineGraph';\r\nimport CanvasDemo from './Canvas/CanvasDemo';\r\n\r\nconst ImportLineGraph = (props) => {\r\n  const [data, setData] = useState(Array.from({ length: 30 }, (x, i) => ({ year: 2000 + i, value: Math.random() })))\r\n  const [config, setConfig] = useState({\r\n    data,\r\n    height: 300,\r\n    xField: 'month',\r\n    yField: 'value',\r\n    label: false,\r\n    point: {\r\n      size: 3,\r\n      shape: 'diamond',\r\n      style: {\r\n        fill: 'white',\r\n        stroke: '#5B8FF9',\r\n        lineWidth: 2,\r\n      },\r\n    },\r\n    xAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Tháng\",\r\n        style: { fontSize: 16 },\r\n      }\r\n    },\r\n    yAxis: {\r\n      grid: {\r\n        line: {\r\n          style: {\r\n            stroke: '#ddd',\r\n            lineDash: [4, 2],\r\n          },\r\n        },\r\n        alternateColor: 'rgba(0,0,0,0.05)',\r\n      },\r\n      title: {\r\n        text: \"Giá trị (tỷ đồng)\",\r\n        style: { fontSize: 16 },\r\n      }\r\n    },\r\n    slider: {},\r\n    barData: {\r\n      timeline: [],\r\n      data: []\r\n    },\r\n    title: props.title\r\n  })\r\n  let [responseData, setResponseData] = React.useState('');\r\n  const fetchData = React.useCallback(() => {\r\n    axios({\r\n      \"method\": \"GET\",\r\n      \"url\": \"https://aic-group.bike/api/v1/dong-nai/import\",\r\n      \"headers\": {\r\n        \"content-type\": \"application/json\",\r\n      }, \"params\": {\r\n        \"language_code\": \"en\"\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data)\r\n        const d = response.data\r\n        const { timeline, total_import } = d.data\r\n        let data = []\r\n        total_import.value.forEach((value, index) => {\r\n          data.push({\r\n            month: timeline[index],\r\n            value: value\r\n          })\r\n        })\r\n        setData(data)\r\n        let barData = {\r\n          timeline,\r\n          data: [\r\n            { name: \"Kim ngạch nhập khẩu\", data: data.map((val) => val.value) }\r\n          ]\r\n        }\r\n        setConfig({ ...config, data, barData })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n  React.useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n  const [graphType, setGraphType] = useState(\"line\")\r\n  return (\r\n    <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n      <h2 style={{ color: \"#34568B\", marginTop: \"20px\", fontFamily: 'Georgia, Times, \"Times New Roman\", self-serif', textTransform: \"uppercase\", fontWeight: \"bolder\" }}>Kim ngạch nhập khẩu</h2>\r\n\r\n      <div className=\"graph-area\">\r\n        <Select defaultValue={graphType} onChange={setGraphType} style={{ float: \"right\", margin: \"5px\" }}>\r\n          <Select value=\"line\">Biểu đồ đường</Select>\r\n          <Select value=\"bar\">Biểu đồ cột</Select>\r\n        </Select>\r\n        <div style={{ clear: 'both' }}>\r\n          {/* {(graphType === 'line') && <BaseLineGraph {...config} />} */}\r\n          {/* {(graphType === 'bar') && <BaseBarGraph {...config} />} */}\r\n          <div className=\"line-graph\">\r\n            {(graphType === 'line') && <Line {...config} />}\r\n            {(graphType === 'bar') && <CanvasDemo {...config} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default ImportLineGraph;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios';\r\nimport { Select } from 'antd';\r\nimport BaseBarGraph from './StatisticBarGraph/BarBaseGraph';\r\nimport BaseLineGraph from './LineGraph/BaseLineGraph';\r\nimport '../css/LineGraph.css';\r\nimport CanvasDemo from './Canvas/CanvasDemo';\r\n\r\nconst ThuChiLineGraph = (props) => {\r\n    const [thu, setThu] = useState(Array.from({ length: 30 }, (x, i) => ({ year: 2000 + i, value: Math.random() })))\r\n    const thuTitle = 'thu ngân sách'\r\n    const chiTitle = 'chi ngân sách'\r\n    const [thuConfig, setThuConfig] = useState({\r\n        data: thu,\r\n        height: 300,\r\n        xField: 'month',\r\n        yField: 'value',\r\n        seriesField: 'cat',\r\n        xAxis: {},\r\n        yAxis: {\r\n            label: {\r\n                formatter: function formatter(v) {\r\n                    return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\r\n                        return ''.concat(s, ',');\r\n                    });\r\n                },\r\n            },\r\n        },\r\n        xAxis: {\r\n            nice: true,\r\n            grid: {\r\n                line: {\r\n                    style: {\r\n                        stroke: '#ddd',\r\n                        lineDash: [4, 2],\r\n                    },\r\n                },\r\n                alternateColor: 'rgba(0,0,0,0.05)',\r\n            },\r\n            title: {\r\n                text: \"Tháng\",\r\n                style: { fontSize: 16 },\r\n            }\r\n\r\n        },\r\n        yAxis: {\r\n            grid: {\r\n                line: {\r\n                    style: {\r\n                        stroke: '#ddd',\r\n                        lineDash: [4, 2],\r\n                    },\r\n                },\r\n                alternateColor: 'rgba(0,0,0,0.05)',\r\n            },\r\n            title: {\r\n                text: 'Giá trị (tỷ đồng)',\r\n                style: { fontSize: 16 },\r\n            },\r\n        },\r\n        label: false,\r\n        slider: {},\r\n        point: {\r\n            size: 3,\r\n            shape: 'diamond',\r\n            style: {\r\n                fill: 'white',\r\n                stroke: '#5B8FF9',\r\n                lineWidth: 2,\r\n            },\r\n            shape: function shape(item) {\r\n                if (item.category === 'thu ngân sách') {\r\n                    return 'circle';\r\n                }\r\n                return 'diamond';\r\n            },\r\n        },\r\n        legend: {\r\n            position: 'top-right',\r\n            itemName: {\r\n                style: { fill: '#000' },\r\n                formatter: function formatter(name) {\r\n                    return name;\r\n                },\r\n            },\r\n        },\r\n        barData: {\r\n            timeline: [],\r\n            data: []\r\n        },\r\n        title: props.title\r\n    })\r\n\r\n    let [responseData, setResponseData] = React.useState('');\r\n    const fetchData = React.useCallback(() => {\r\n        axios({\r\n            \"method\": \"GET\",\r\n            \"url\": \"https://aic-group.bike/api/v1/dong-nai/thuchi\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n            }, \"params\": {\r\n                \"language_code\": \"en\"\r\n            }\r\n        })\r\n            .then((response) => {\r\n                setResponseData(response.data)\r\n                let { timeline, thuchi_data } = response.data.data\r\n                const thu_data = thuchi_data[0].value[0].value.reverse()\r\n                const chi_data = thuchi_data[1].value[0].value.reverse()\r\n                timeline = timeline.reverse()\r\n\r\n                let data = []\r\n                thu_data.forEach((value, i) => {\r\n                    data.push({\r\n                        month: timeline[i],\r\n                        value: value,\r\n                        cat: thuTitle\r\n                    })\r\n                })\r\n                chi_data.forEach((value, i) => {\r\n                    data.push({\r\n                        month: timeline[i],\r\n                        value: value,\r\n                        cat: chiTitle\r\n                    })\r\n                })\r\n                setThu(data)\r\n                let barData = {\r\n                    timeline,\r\n                    data: [thuTitle, chiTitle].map((title, idx) => ({\r\n                        name: title,\r\n                        data: data.filter((val) => val.cat === title).map((val) => val.value)\r\n                    }))\r\n                }\r\n                setThuConfig({ ...thuConfig, data, barData })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n\r\n    const [graphType, setGraphType] = useState(\"bar\")\r\n    return (\r\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            <h2 style={{ color: \"#34568B\", marginTop: \"20px\", fontFamily: 'Georgia, Times, \"Times New Roman\", self-serif', textTransform: \"uppercase\", fontWeight: \"bolder\" }}>Thu chi ngân sách</h2>\r\n\r\n            <div className=\"graph-area\">\r\n                <Select defaultValue={graphType} onChange={setGraphType} style={{ float: \"right\", margin: \"5px\" }}>\r\n                    <Select value=\"line\">Biểu đồ đường</Select>\r\n                    <Select value=\"bar\">Biểu đồ cột</Select>\r\n                </Select>\r\n\r\n                <div style={{ clear: \"both\" }}>\r\n                    {/* {(graphType === 'line') && <BaseLineGraph {...thuConfig} />} */}\r\n                    {/* {(graphType === 'bar') && <BaseBarGraph {...thuConfig} />} */}\r\n                    <div className=\"line-graph\">\r\n                        {(graphType === 'line') && <Line {...thuConfig} />}\r\n                        {(graphType === 'bar') && <CanvasDemo {...thuConfig} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ThuChiLineGraph;","import React, { useState, useEffect } from 'react';\r\nimport { Bar } from '@ant-design/charts';\r\nimport axios from 'axios';\r\nimport '../../css/Graph.css';\r\nimport { Modal } from 'antd';\r\n\r\nconst Demo = (props) => {\r\n    const [barName, setBarName] = useState('')\r\n    const [data, setData] = useState([])\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"props\", props)\r\n        let { timeline, title } = props\r\n        let values = props.data\r\n        let temp = []\r\n\r\n        for (const [key, list_val] of Object.entries(values)) {\r\n            list_val.forEach((val, idx) => {\r\n                temp.push({\r\n                    label: timeline[idx],\r\n                    type: key,\r\n                    value: val\r\n                })\r\n            })\r\n        }\r\n        setBarName(title)\r\n        setData(temp)\r\n    }, [])\r\n\r\n    var config = {\r\n        data: data,\r\n        isGroup: true,\r\n        xField: 'value',\r\n        yField: 'label',\r\n        seriesField: 'type',\r\n        marginRatio: 0,\r\n        label: {\r\n            position: 'middle',\r\n            layout: [\r\n                { type: 'interval-adjust-position' },\r\n                { type: 'interval-hide-overlap' },\r\n                { type: 'adjust-color' },\r\n            ],\r\n        },\r\n        slider: {}\r\n    };\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    return (\r\n        <div id=\"barChart\">\r\n            <h3 onClick={() => {\r\n                setVisible(true)\r\n            }}>{barName}</h3>\r\n            <Bar {...config} />\r\n            <Modal\r\n                centered\r\n                visible={visible}\r\n                onOk={() => setVisible(false)}\r\n                onCancel={() => setVisible(false)}\r\n                width={1000}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n            >\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h3>{barName}</h3>\r\n                    <Bar {...config} />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Demo;","import React, { useState, useEffect } from 'react';\r\nimport { Pie } from '@ant-design/charts';\r\nimport { Select } from 'antd'\r\nimport { pipelineTopicExpression } from '@babel/types';\r\n\r\nconst DemoPie = (props) => {\r\n    const Option = Select;\r\n    const [currrentData, setCurrentData] = useState([])\r\n    const [defaultYear, setDefaultYear] = useState()\r\n    var [data, setData] = useState([\r\n        {\r\n            type: 'Nam',\r\n            value: 27,\r\n        },\r\n        {\r\n            type: 'Nu',\r\n            value: 25,\r\n        },\r\n    ]);\r\n    useEffect(() => {\r\n        // let data = Array.from({ length: 10 }, (idx, value) => ({\r\n        //     year: value + 2000,\r\n        //     data: [\r\n        //         { type: 'Nam', value: Math.floor(Math.random() * 100) },\r\n        //         { type: 'Nữ', value: Math.floor(Math.random() * 100) },\r\n        //         { type: 'Nữ', value: Math.floor(Math.random() * 100) },\r\n        //     ]\r\n        // }));\r\n        // setData(data)\r\n        // console.log(data)\r\n        console.log(\"Props\", props)\r\n        let { timeline, data } = props\r\n        let temp = []\r\n        for (let i = 0; i < timeline.length; i++) {\r\n            temp.push({\r\n                year: timeline[i],\r\n                data: [\r\n                    { type: 'Nữ', value: data.nu[i] },\r\n                    { type: 'Nam', value: data.nam[i] },\r\n                ]\r\n            })\r\n        }\r\n        setData(temp)\r\n        setCurrentData(temp.slice(-1,)[0].data)\r\n    }, [])\r\n    const config = {\r\n        appendPadding: 10,\r\n        data: currrentData,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 1,\r\n        innerRadius: 0.6,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-30%',\r\n            content: function content(_ref) {\r\n                var percent = _ref.percent;\r\n                return ''.concat((percent * 100).toFixed(0), '%');\r\n            },\r\n            style: {\r\n                fontSize: 10,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n        statistic: {\r\n            title: false,\r\n            content: {\r\n                style: {\r\n                    whiteSpace: 'pre-wrap',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    fontSize: \"1.2em\",\r\n                    color: \" #8a3ab9\",\r\n                },\r\n                content: `Tỷ lệ thất nghiệp\\n ${props.title}`,\r\n            },\r\n        },\r\n        interactions: [{ type: 'element-active' }, { type: 'element-active' }],\r\n    };\r\n    const handleChange = (value) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].year == value) {\r\n                setCurrentData(data[i].data)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ textAlign: \"center\", display: \"inline-block\", width: \"30%\", marginBottom: \"100px\", height: \"auto\" }}>\r\n            <div className=\"selectArea\" style={{ float: \"right\" }}>\r\n                <Select defaultValue={props.timeline.slice(-1,)[0]} style={{ width: \"100%\" }} onChange={handleChange}>\r\n                    {data.map((value, idx) => {\r\n                        return (\r\n                            <Option value={value.year}>{value.year}</Option>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </div>\r\n            <div style={{ height: \"inherit\" }}>\r\n                <h3 style={{ marginLeft: \"20px\", fontFamily: \"unset\" }}>{props.title}</h3>\r\n                <Pie {...config} style={{ height: \"35vh\" }} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default DemoPie;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport Demo from './BarGraph.js/Demo';\r\nimport { ENOMEM } from 'constants';\r\nimport {Select} from 'antd';\r\nimport DemoPie from './PieGraph/PieDemo';\r\nimport '../css/LineGraph.css';\r\nconst UnEmpLineGraph = (props) => {\r\n    const [barName, setBarName] = useState('')\r\n    const [data, setData] = useState([])\r\n    const [timeline, setTimeline] = useState([])\r\n    const [graphType, setGraphType] = useState(\"bar\")\r\n\r\n    const fetchData = React.useCallback(() => {\r\n        axios({\r\n            \"method\": \"GET\",\r\n            \"url\": \"https://aic-group.bike/api/v1/dong-nai/unemployment\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n            }, \"params\": {\r\n                \"language_code\": \"en\"\r\n            }\r\n        })\r\n            .then((response) => {\r\n                const { timeline, unemployment } = response.data.data\r\n                setTimeline(timeline)\r\n                console.log(\"Timeline, UnEmp:\", timeline, unemployment)\r\n\r\n                let unEmpData = []\r\n                for (let unEmmType of unemployment) {\r\n                    const typeName = unEmmType.index_name\r\n                    const values = unEmmType.value\r\n\r\n                    let valueWithType = []\r\n                    let regions = [\"Tổng số\", \"Thành thị\", \"Nông thôn\"]\r\n                    values.forEach((region, i) => {\r\n                        let regionName = region.region\r\n                        let value = region.value\r\n                        regionName = regions[i]\r\n                        valueWithType.push({\r\n                            // regions,\r\n                            regionName,\r\n                            value\r\n                        })\r\n                    })\r\n                    unEmpData.push({\r\n                        typeName,\r\n                        values: valueWithType\r\n                    })\r\n                }\r\n                \r\n                setData(unEmpData)\r\n                console.log(\"Type\", unEmpData)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n    const Graph = (graphType == \"bar\") ? Demo: DemoPie;\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            <div className=\"graph-area\" style={{marginBottom:\"10px\"}}>\r\n            {/* <div style={{\r\n                // border: \"1px double gray\",\r\n                padding: \"20px\",\r\n                borderRadius: \"20px\",\r\n                display: \"inline-block\",\r\n                width: \"100%\",\r\n            }}> */}\r\n                <Select defaultValue=\"bar\" style={{float:\"right\", margin:\"5px\"}} onChange={(value)=>{\r\n                    setGraphType(value)\r\n                }}>\r\n                    <Select value=\"bar\">Biểu đồ cột</Select>\r\n                    <Select value=\"pie\">Biểu đồ bánh</Select>\r\n                </Select>\r\n                <h2 style={{ color: \"#34568B\", marginTop: \"20px\", fontFamily: 'Georgia, Times, \"Times New Roman\", self-serif', textTransform: \"uppercase\", fontWeight: \"bolder\", marginLeft:\"14%\" }}><u>{props.title}</u></h2>\r\n                {data.map((value) => {\r\n                    return (\r\n                        <div style={{textAlign:\"center\"}}>\r\n                            <h3 style={{ clear:\"both\", marginBottom:\"50px\"}}>{value.typeName}</h3>\r\n                            <div style={{marginBottom:\"20px\"}}>\r\n                                {value.values.map((val) => {\r\n                                    return <Graph title={val.regionName} data={val.value} timeline={timeline}/>\r\n                                })}\r\n                                <hr style={{width:\"50%\", clear:\"both\", textAlign:\"center\", display:\"block\", opacity:\"0.5\"}}/>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\nexport default UnEmpLineGraph;","import React from 'react'\r\nimport CpiLineGraph from './CpiLineGraph'\r\nimport '../css/Submenu.css'\r\nimport IipLineGraph from './IipLineGraph'\r\nimport ExportLineGraph from './ExportLineGraph'\r\nimport ImportLineGraph from './ImportLineGraph'\r\nimport ThuChiLineGraph from './ThuChiLineGraph'\r\nimport UnEmpLineGraph from './UnEmpLineGraph'\r\nconst StatisticGraph = () => {\r\n    return (\r\n        <section className='charts'>\r\n            <CpiLineGraph title=\"chỉ số giá tiêu dùng\" />\r\n            <IipLineGraph title=\"chỉ số sản xuất công nghiệp\" />\r\n            <ExportLineGraph title=\"Kim ngạch xuất khẩu\" />\r\n            <ImportLineGraph title=\"Kim ngạch nhập khẩu\" />\r\n            {/* <UnEmpLineGraph title=\"Tỉ lệ thất nghiệp\" /> */}\r\n            <ThuChiLineGraph title=\"Thu chi ngân sách\" />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default StatisticGraph;","\r\nimport { letterFrequency } from '@visx/mock-data';\r\nimport { Group } from '@visx/group';\r\nimport { Bar } from '@visx/shape';\r\nimport { scaleLinear, scaleBand } from '@visx/scale';\r\n\r\n// We'll use some mock data from `@visx/mock-data` for this.\r\nconst data = letterFrequency;\r\n\r\n// Define the graph dimensions and margins\r\nconst width = 500;\r\nconst height = 500;\r\nconst margin = { top: 20, bottom: 20, left: 20, right: 20 };\r\n\r\n// Then we'll create some bounds\r\nconst xMax = width - margin.left - margin.right;\r\nconst yMax = height - margin.top - margin.bottom;\r\n\r\n// We'll make some helpers to get at the data we want\r\nconst x = d => d.letter;\r\nconst y = d => +d.frequency * 100;\r\n\r\n// And then scale the graph by our data\r\nconst xScale = scaleBand({\r\n  range: [0, xMax],\r\n  round: true,\r\n  domain: data.map(x),\r\n  padding: 0.4,\r\n});\r\nconst yScale = scaleLinear({\r\n  range: [yMax, 0],\r\n  round: true,\r\n  domain: [0, Math.max(...data.map(y))],\r\n});\r\n\r\n// Compose together the scale and accessor functions to get point functions\r\nconst compose = (scale, accessor) => data => scale(accessor(data));\r\nconst xPoint = compose(xScale, x);\r\nconst yPoint = compose(yScale, y);\r\n\r\n// Finally we'll embed it all in an SVG\r\nexport default function BarGraph(props) {\r\n  {console.log(data)}\r\n  return (\r\n    <svg width={width} height={height}>\r\n      {data.map((d, i) => {\r\n        let d_ = {...d, frequency: Math.random() / 10}\r\n        const barHeight = yMax - yPoint(d_);\r\n        return (\r\n          <Group key={`bar-${i}`}>\r\n            <Bar\r\n              x={xPoint(d_)}\r\n              y={yMax - barHeight}\r\n              height={barHeight}\r\n              width={xScale.bandwidth()}\r\n              fill=\"#fc2e1c\"\r\n            />\r\n          </Group>\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n}\r\n","import { Table, Select, Button } from 'antd';\r\nimport { useState } from 'react';\r\nconst { Option } = Select;\r\n\r\n\r\nconst columns_name = [\r\n    {\"name\": \"Kì gốc\", \"child\": []},\r\n    {\r\n        \"name\": \"Chỉ số giá tháng báo cáo so với (%)\",\r\n        \"child\": [\r\n                {\"name\": \"Cùng tháng năm trước\", \"child\": []},\r\n                {\"name\": \"Tháng 12 năm trước\", \"child\": []},\r\n                {\"name\": \"Tháng trước\", \"child\": []},\r\n        ],\r\n    },\r\n    {\"name\": \"Bình quân cùng kỳ\", \"child\": []},\r\n]\r\n\r\n// const getConfig = (month, year)=>{\r\n//     let data = \r\n// }\r\nconst getColumnConfig = (month, year) => {\r\n    return {\r\n        title: `Tháng ${month}/${year}`,\r\n        children: [\r\n            {\r\n                title: 'Năm báo cáo',\r\n                dataIndex: 'report_year',\r\n                key: 'report_year',\r\n                width: 150,\r\n                children: [\r\n                    {\r\n                        title: 'Thực hiện tháng trước',\r\n                        dataIndex: `_${month}_${year}_last_month`,\r\n                        key: `_${month}_${year}_last_month`,\r\n                        width: 100,\r\n                        children: [\r\n                            {\r\n                                title: \"Số lượng\",\r\n                                dataIndex: `_${month}_${year}_last_month_amount`,\r\n                                width: 100\r\n                            },\r\n                            {\r\n                                title: \"Giá trị\",\r\n                                dataIndex: `_${month}_${year}_last_month_value`,\r\n                                width: 100\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Uớc tính tháng báo cáo',\r\n                        dataIndex: `_${month}_${year}_current_month`,\r\n                        key: `_${month}_${year}_current_month`,\r\n                        width: 100,\r\n                        children: [\r\n                            {\r\n                                title: \"Số lượng\",\r\n                                dataIndex: `_${month}_${year}_current_month_amount`,\r\n                                width: 100\r\n                            },\r\n                            {\r\n                                title: \"Giá trị\",\r\n                                dataIndex: `_${month}_${year}_current_month_value`,\r\n                                width: 100\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        title: 'Cộng dồn từ đầu năm đến cuối tháng báo cáo\t',\r\n                        dataIndex: `_${month}_${year}_cumsum_month`,\r\n                        key: `_${month}_${year}_cumsum_month`,\r\n                        width: 100,\r\n                        children: [\r\n                            {\r\n                                title: \"Số lượng\",\r\n                                dataIndex: `_${month}_${year}_cumsum_month_amount`,\r\n                                width: 100\r\n                            },\r\n                            {\r\n                                title: \"Giá trị\",\r\n                                dataIndex: `_${month}_${year}_cumsum_month_value`,\r\n                                width: 100\r\n                            },\r\n                        ]\r\n                    },\r\n                ]\r\n            },\r\n        ],\r\n    }\r\n}\r\n\r\nlet columns = [\r\n    {\r\n        title: 'TT',\r\n        dataIndex: 'tt',\r\n        key: 'tt',\r\n        width: 40,\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Chỉ tiêu',\r\n        dataIndex: 'index_name',\r\n        key: 'index_name',\r\n        width: 100,\r\n        fixed: 'left',\r\n    },\r\n    {\r\n        title: 'Đơn vị',\r\n        dataIndex: 'unit',\r\n        key: 'unit',\r\n        width: 100,\r\n        fixed: 'left',\r\n    },\r\n\r\n];\r\n\r\n// for (let month = 1; month < 13; month++) {\r\n//     for (let year = 2019; year < 2021; year++) {\r\n//         columns.push(getColumnConfig(month, year))\r\n//     }\r\n// }\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 20; i++) {\r\n    data.push({\r\n        tt: i,\r\n        index_name: 'John Brown',\r\n        unit: i + 1,\r\n        street: 'Lake Park',\r\n        building: 'C',\r\n        number: 2035,\r\n        companyAddress: 'Lake Street 42',\r\n        companyName: 'SoftLake Co',\r\n        gender: 'M',\r\n        _1_2019_last_month_value: 100\r\n    });\r\n}\r\n\r\nconst BaseReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(2019)\r\n    const [finalColumns, setFinalColumns] = useState(columns)\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"select\">\r\n                <h4 style={{display:\"inline\"}}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                <Select defaultValue={`${month}`} onChange={setMonth}>\r\n                    {Array.from(Array(12).keys()).map((val) => {\r\n                        return <Option value={val + 1}>{val + 1}</Option>\r\n                    })}\r\n                </Select>\r\n                <Select defaultValue={`${year}`} onChange={setYear}>\r\n                    {Array.from(Array(2).keys()).map((val) => {\r\n                        return <Option value={val + 2019}>{val + 2019}</Option>\r\n                    })}\r\n                </Select>\r\n                <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                    console.log(month, year)\r\n                    let addedColumn = getColumnConfig(month, year)\r\n                    setFinalColumns([...columns, addedColumn])\r\n              }}>Xem báo cáo</Button>\r\n            </div>\r\n            <Table\r\n                columns={finalColumns}\r\n                dataSource={data}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 200 }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaseReport;","import React, { useEffect, useState } from 'react';\r\nimport { Line, Mix } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport '../../css/LineGraph.css'\r\nconst BaseForecast = (props) => {\r\n    const { mixData, defaultAlpha } = props;\r\n    const mixConfig = {\r\n        slider: {},\r\n        appendPadding: 8,\r\n        syncViewPadding: true,\r\n        tooltip: { shared: true, showMarkers: false, showCrosshairs: true, offsetY: -50 },\r\n        views: [\r\n            {\r\n                data: mixData?.area || [],\r\n                axes: {\r\n                    value: {\r\n                        title: {\r\n                            text: `Giá trị (${props.unit})`,\r\n                            style: {\r\n                                fontSize: 15,\r\n                                fontWeight: \"bold\"\r\n                            }\r\n                        }\r\n                    },\r\n                    month: {\r\n                        title: {\r\n                            text: `Tháng`, style: {\r\n                                fontSize: 15,\r\n                                fontWeight: \"bold\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                meta: {\r\n                    month: {\r\n                        type: \"time\",\r\n                        mask: \"MM-YY\",\r\n                        nice: true,\r\n                        // range: [0, 1]\r\n                    },\r\n                    value: {\r\n                        // nice: true,\r\n                        sync: true,\r\n                        alias: `Khoảng dự báo ${props.name} (alpha=${defaultAlpha})`,\r\n                    },\r\n                    slider: true\r\n                },\r\n                // view1: prepare a area plot, mapping position to `time*temperature`\r\n                geometries: [\r\n                    {\r\n                        type: 'area',\r\n                        xField: 'month',\r\n                        yField: 'value',\r\n                        mapping: {},\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                data: mixData?.line || [],\r\n                axes: false,\r\n                meta: {\r\n                    month: {\r\n                        type: \"time\",\r\n                        mask: \"MM-YY\",\r\n                        nice: true\r\n                    },\r\n                    value: {\r\n                        sync: 'value',\r\n                        alias: `Chỉ số ${props.name}`,\r\n                    },\r\n                    slider: true\r\n                },\r\n                // view2: prepare a line plot and point plot, mapping position to `time*temperature` (share data)\r\n                geometries: [\r\n                    {\r\n                        type: 'line',\r\n                        xField: 'month',\r\n                        yField: 'value',\r\n                        mapping: {},\r\n                    },\r\n                    {\r\n                        type: 'point',\r\n                        xField: 'month',\r\n                        yField: 'value',\r\n                        mapping: {\r\n                            shape: 'circle',\r\n                            style: {\r\n                                fillOpacity: 1,\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                data: mixData?.forecastLine || [],\r\n                axes: false,\r\n                meta: {\r\n                    month: {\r\n                        type: \"time\",\r\n                        mask: \"MM-YY\",\r\n                        nice: true\r\n                    },\r\n                    value: {\r\n                        sync: 'value',\r\n                        alias: `Chỉ số dự báo ${props.name}`,\r\n                    },\r\n                    slider: true\r\n                },\r\n                // view2: prepare a line plot and point plot, mapping position to `time*temperature` (share data)\r\n                geometries: [\r\n                    {\r\n                        type: 'line',\r\n                        xField: 'month',\r\n                        yField: 'value',\r\n                        mapping: {\r\n                            color: 'red', style: {\r\n                                fillOpacity: 0.5\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        type: 'point',\r\n                        xField: 'month',\r\n                        yField: 'value',\r\n                        mapping: {\r\n                            shape: 'diamond',\r\n                            style: {\r\n                                fillOpacity: 0.5,\r\n                            },\r\n                            color: 'red'\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n    return (\r\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n            <div>\r\n                <h2 style={{ color: \"#34568B\", marginTop: \"20px\", fontFamily: 'Georgia, Times, \"Times New Roman\", self-serif', textTransform: \"uppercase\", fontWeight: \"bolder\" }}>{props.title}</h2>\r\n                {/* <BaseForecast unit=\"%\" mixData={mixData} defaultAlpha={defaultAlpha} name=\"cpi\" /> */}\r\n                <div className=\"forecast-graph\">\r\n                    <Mix {...mixConfig} style={{ paddingBottom: \"10px\", height: \"55vh\" }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        // <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n        //         <h2 style={{ color: \"gray\" }}><u>{props.title}</u></h2>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n};\r\nexport default BaseForecast;","import React, { useEffect, useState } from 'react';\r\nimport { Line, Mix } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport BaseForecast from './BaseForecast';\r\n\r\nconst CpiForecast = (props) => {\r\n    const defaultAlpha = 0.9\r\n    const [mixData, setMixData] = useState({})\r\n\r\n    const fetchData = React.useCallback(() => {\r\n        const cpisURL = \"https://aic-group.bike/api/v1/dong-nai/cpies\"\r\n        const cpiForecastURL = `https://aic-group.bike/api/v1/dong-nai/cpis/forecast/12?alpha=${defaultAlpha}`\r\n\r\n        const getCPI = axios.get(cpisURL)\r\n        const getCPIForecast = axios.get(cpiForecastURL)\r\n        axios.all([getCPI, getCPIForecast]).then(\r\n            axios.spread((...allData) => {\r\n                const cpiData = allData[0].data\r\n                const forecastData = allData[1].data\r\n                let { cpi, timeline } = cpiData.data\r\n                let data = []\r\n                let mixData = {\r\n                    \"line\": [],\r\n                    \"forecastLine\": [],\r\n                    \"area\": [],\r\n\r\n                }\r\n                let cpi_length = cpi[0].val.length\r\n                cpi[0].val.forEach((val, index) => {\r\n\r\n                    mixData[\"line\"].push({\r\n                        month: timeline[index],\r\n                        value: parseFloat((parseFloat(val) - 100))\r\n                    })\r\n                    if (index === cpi_length - 4) {\r\n                        mixData[\"area\"].push({\r\n                            month: timeline[index],\r\n                            value: [parseFloat(parseFloat(val) - 100), parseFloat(parseFloat(val) - 100)]\r\n                        })\r\n                        mixData[\"forecastLine\"].push({\r\n                            month: timeline[index],\r\n                            value: parseFloat(parseFloat(val) - 100)\r\n                        })\r\n                    } else if (index < cpi_length - 4) {\r\n                        mixData[\"area\"].push({\r\n                            month: timeline[index],\r\n                            value: [null, null]\r\n                        })\r\n                        mixData[\"forecastLine\"].push({\r\n                            month: timeline[index],\r\n                            value: null\r\n                        })\r\n                    }\r\n                })\r\n\r\n                const { upper, lower } = forecastData.data\r\n                const forcastTimeline = forecastData.data.timeline\r\n                cpi = forecastData.data.cpi\r\n                console.log(\"upper, lower, cpi, timeline: \", upper, lower, cpi, timeline)\r\n\r\n                upper.forEach((up, index) => {\r\n                    const month = forcastTimeline[index].split(\"/\")[0]\r\n                    const year = forcastTimeline[index].split(\"/\")[1]\r\n                    const time = [year, month].join(\"-\")\r\n\r\n                    mixData[\"area\"].push({\r\n                        month: time,\r\n                        value: [parseFloat(parseFloat(lower[index]).toFixed(2)), parseFloat(parseFloat(upper[index]).toFixed(2))]\r\n                    })\r\n                    mixData[\"forecastLine\"].push({\r\n                        month: time,\r\n                        value: parseFloat(parseFloat(cpi[index]).toFixed(2))\r\n                    })\r\n                    if (index >= 3) {\r\n                        mixData[\"line\"].push({\r\n                            month: time,\r\n                            value: null\r\n                        })\r\n                    }\r\n                    // console.log(mixData)\r\n                })\r\n                console.log(mixData)\r\n                setMixData(mixData)\r\n            })\r\n        )\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <BaseForecast unit=\"%\" mixData={mixData} defaultAlpha={defaultAlpha} name=\"cpi\" title={props.title} />\r\n    )\r\n};\r\nexport default CpiForecast;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport BaseForecast from './BaseForecast';\r\n\r\nconst ExportForecast = (props) => {\r\n    const defaultAlpha = 0.9\r\n    const [mixData, setMixData] = useState({})\r\n\r\n    const fetchData = React.useCallback(async () => {\r\n        const importURL = \"https://aic-group.bike/api/v1/dong-nai/export\"\r\n        const importForecastURL = `https://aic-group.bike/api/v1/dong-nai/export/forecast/12?alpha=${defaultAlpha}`\r\n\r\n        const getImport = axios.get(importURL)\r\n        const getImportForecast = axios.get(importForecastURL)\r\n\r\n        axios.all([getImport, getImportForecast]).then(\r\n            axios.spread((...allData) => {\r\n                const exportData = allData[0].data\r\n                const importForecastData = allData[1].data\r\n\r\n                const { timeline, total_export } = exportData.data\r\n                const { lower, upper } = importForecastData.data\r\n                const exportForecast = importForecastData.data.export\r\n                const forecastTimeline = importForecastData.data.timeline\r\n\r\n                let addedId = total_export.value.length - 4\r\n\r\n                let mixData = {\r\n                    line: [],\r\n                    area: [],\r\n                    forecastLine: []\r\n                }\r\n                total_export.value.forEach((value, index) => {\r\n                    let month = timeline[index].split(\"/\")[0]\r\n                    let year = timeline[index].split(\"/\")[1]\r\n                    let time = [year, month].join(\"-\")\r\n                    mixData.line.push({\r\n                        month: time,\r\n                        value: parseFloat(value)\r\n                    })\r\n\r\n                    if (index === addedId) {\r\n                        mixData.area.push({\r\n                            month: time,\r\n                            value: [parseFloat(value), parseFloat(value)]\r\n                        })\r\n                        mixData.forecastLine.push({\r\n                            month: time,\r\n                            value: parseFloat(value)\r\n                        })\r\n                    } else if (index < addedId) {\r\n                        mixData.area.push({\r\n                            month: time,\r\n                            value: [null, null]\r\n                        })\r\n                        mixData.forecastLine.push({\r\n                            month: time,\r\n                            value: null\r\n                        })\r\n\r\n                    }\r\n\r\n                })\r\n\r\n                exportForecast.forEach((value, index) => {\r\n                    let month = forecastTimeline[index].split(\"/\")[0]\r\n                    let year = forecastTimeline[index].split(\"/\")[1]\r\n                    let time = [year, month].join(\"-\")\r\n                    mixData.area.push({\r\n                        month: time,\r\n                        value: [parseFloat(lower[index]).toFixed(2), parseFloat(upper[index]).toFixed(2)]\r\n                    })\r\n                    mixData.line.push({\r\n                        month: time,\r\n                        value: null\r\n                    })\r\n                    mixData.forecastLine.push({\r\n                        month: time,\r\n                        value: parseFloat(value)\r\n                    })\r\n                })\r\n\r\n                setMixData(mixData)\r\n            })\r\n        )\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n\r\n\r\n    return (\r\n        <BaseForecast unit=\"%\" mixData={mixData} defaultAlpha={defaultAlpha} name=\"xuất khẩu\" title={props.title} />\r\n\r\n    )\r\n};\r\nexport default ExportForecast;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport BaseForecast from './BaseForecast';\r\nimport '../../css/LineGraph.css'\r\nconst ImportForecast = (props) => {\r\n    const defaultAlpha = 0.9\r\n    const [mixData, setMixData] = useState({})\r\n\r\n    const fetchData = React.useCallback(async () => {\r\n        const importURL = \"https://aic-group.bike/api/v1/dong-nai/import\"\r\n        const importForecastURL = `https://aic-group.bike/api/v1/dong-nai/import/forecast/12?alpha=${defaultAlpha}`\r\n\r\n        const getImport = axios.get(importURL)\r\n        const getImportForecast = axios.get(importForecastURL)\r\n\r\n        axios.all([getImport, getImportForecast]).then(\r\n            axios.spread((...allData) => {\r\n                const importData = allData[0].data\r\n                const importForecastData = allData[1].data\r\n\r\n                const { timeline, total_import } = importData.data\r\n                const { lower, upper } = importForecastData.data\r\n                const importForecast = importForecastData.data.import\r\n                const forecastTimeline = importForecastData.data.timeline\r\n\r\n                let mixData = {\r\n                    line: [],\r\n                    area: [],\r\n                    forecastLine: []\r\n                }\r\n                let addedId = total_import.value.length - 4\r\n\r\n                total_import.value.forEach((value, index) => {\r\n                    const month = timeline[index].split('/')[0]\r\n                    const year = timeline[index].split('/')[1]\r\n                    const time = [year, month].join('-')\r\n\r\n                    mixData.line.push({\r\n                        month: time,\r\n                        value: parseFloat(value)\r\n                    })\r\n                    if (index === addedId) {\r\n                        mixData.area.push({\r\n                            month: time,\r\n                            value: [parseFloat(value), parseFloat(value)]\r\n                        })\r\n                        mixData.forecastLine.push({\r\n                            month: time,\r\n                            value: parseFloat(value)\r\n                        })\r\n                    } else if (index < addedId) {\r\n                        mixData.area.push({\r\n                            month: time,\r\n                            value: [null, null]\r\n                        })\r\n                        mixData.forecastLine.push({\r\n                            month: time,\r\n                            value: null\r\n                        })\r\n                    }\r\n                })\r\n\r\n                importForecast.forEach((value, index) => {\r\n                    let month = forecastTimeline[index].split(\"/\")[0]\r\n                    let year = forecastTimeline[index].split(\"/\")[1]\r\n                    const time = [year, month].join(\"-\")\r\n                    mixData.area.push({\r\n                        month: time,\r\n                        value: [parseFloat(lower[index]), parseFloat(upper[index])]\r\n                    })\r\n\r\n                    mixData.line.push({\r\n                        month: time,\r\n                        value: null\r\n                    })\r\n                    mixData.forecastLine.push({\r\n                        month: time,\r\n                        value: parseFloat(value)\r\n                    })\r\n                })\r\n                setMixData(mixData)\r\n            })\r\n        )\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n    return (\r\n        <BaseForecast unit=\"%\" mixData={mixData} defaultAlpha={defaultAlpha} name=\"nhập khẩu\" title={props.title} />\r\n\r\n    )\r\n};\r\nexport default ImportForecast;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from '@ant-design/charts';\r\nimport axios from 'axios'\r\nimport BaseForecast from './BaseForecast';\r\n\r\nconst IipForecast = (props) => {\r\n    const defaultAlpha = 0.9\r\n    const [mixData, setMixData] = useState({})\r\n\r\n    const fetchData = React.useCallback(async () => {\r\n        const iipForecastUrl = `https://aic-group.bike/api/v1/dong-nai/iips/forecast/6?alpha=${defaultAlpha}`\r\n        const iipDataUrl = \"https://aic-group.bike/api/v1/dong-nai/iips\"\r\n\r\n        const getIip = axios.get(iipDataUrl)\r\n        const getIipForecast = axios.get(iipForecastUrl)\r\n        axios.all([getIip, getIipForecast]).then(\r\n            axios.spread((...allData) => {\r\n                // console.log(\"allData: \", allData)\r\n                const iipData = allData[0].data\r\n                const iipForecastData = allData[1].data\r\n\r\n                const { iip, timeline } = iipData.data\r\n                const { lower, upper } = iipForecastData.data\r\n                let forecastTimeline = iipForecastData.data.timeline\r\n                let iipForecast = iipForecastData.data.iip\r\n\r\n                let mixData = {\r\n                    \"line\": [],\r\n                    \"area\": [],\r\n                    \"forecastLine\": []\r\n                }\r\n                let timelen = timeline.length\r\n                timeline.forEach((time, idx) => {\r\n                    mixData['line'].push({\r\n                        month: time,\r\n                        value: parseFloat(iip[idx])\r\n                    })\r\n                    if (idx === timelen - 4) {\r\n                        mixData[\"area\"].push({\r\n                            month: time,\r\n                            value: [parseFloat(iip[idx]), parseFloat(iip[idx])]\r\n                        })\r\n                        mixData['forecastLine'].push({\r\n                            month: time,\r\n                            value: parseFloat(iip[idx])\r\n                        })\r\n                    } else if (idx < timelen - 4) {\r\n                        mixData[\"area\"].push({\r\n                            month: time,\r\n                            value: [null, null]\r\n                        })\r\n                        mixData['forecastLine'].push({\r\n                            month: time,\r\n                            value: null\r\n                        })\r\n                    }\r\n                })\r\n\r\n                forecastTimeline.forEach((t, idx) => {\r\n                    const month = t.split(\"/\")[0]\r\n                    const year = t.split(\"/\")[1]\r\n                    const time = [year, month].join('-')\r\n                    mixData['line'].push({\r\n                        month: time,\r\n                        value: null\r\n                    })\r\n                    mixData['area'].push({\r\n                        month: time,\r\n                        value: [parseFloat(lower[idx]), parseFloat(upper[idx])]\r\n                    })\r\n                    mixData['forecastLine'].push({\r\n                        month: time,\r\n                        value: parseFloat(iipForecast[idx])\r\n                    })\r\n                })\r\n\r\n                setMixData(mixData)\r\n\r\n            })\r\n        )\r\n\r\n\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n    return (\r\n        <BaseForecast unit=\"%\" mixData={mixData} defaultAlpha={defaultAlpha} name=\"sản xuất công nghiệp\" title={props.title} />\r\n\r\n    )\r\n};\r\nexport default IipForecast;","import { File } from 'better-xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction ExportExcel(column, dataSource, fileName = 'example', sheet_name=\"Dữ liệu\") {\r\n  //  new working spectrum \r\n  const file = new File();\r\n  //  the new table \r\n  let sheet = file.addSheet(sheet_name);\r\n  //  gets the number of header rows \r\n  let depth = getDepth(column);\r\n  //  gets the number of columns in the header \r\n  let columnNum = getColumns(column);\r\n  //  new number of header rows \r\n  let rowArr = [];\r\n  for (let k = 0; k < depth; k++) {\r\n    rowArr.push(sheet.addRow());\r\n  }\r\n  //  populate the cells according to the number of columns \r\n  rowArr.map(ele => {\r\n    for (let j = 0; j < columnNum; j++) {\r\n      let cell = ele.addCell();\r\n      cell.value = j;\r\n    }\r\n  });\r\n  //  initializes the header \r\n  init(column, 0, 0);\r\n  //  unfold the columns in order \r\n  let columnLineArr = [];\r\n  columnLine(column);\r\n  //  according to the column, the dataSource the data inside is sorted and converted into a two-dimensional array \r\n  let dataSourceArr = [];\r\n  dataSource.map(ele => {\r\n    let dataTemp = [];\r\n    columnLineArr.map(item => {\r\n      dataTemp.push({\r\n        [item.dataIndex]: ele[item.dataIndex],\r\n        value: ele[item.dataIndex],\r\n      });\r\n    });\r\n    dataSourceArr.push(dataTemp);\r\n  });\r\n  // debugger;\r\n  //  drawing table data \r\n  dataSourceArr.forEach((item, index) => {\r\n    // according to the data, create the corresponding number of rows \r\n    let row = sheet.addRow();\r\n    row.setHeightCM(0.8);\r\n    // creates a cell for that number \r\n    item.map(ele => {\r\n      let cell = row.addCell();\r\n      if (ele.hasOwnProperty('num')) {\r\n        cell.value = index + 1;\r\n      } else {\r\n        cell.value = ele.value;\r\n      }\r\n      cell.style.align.v = 'center';\r\n      cell.style.align.h = 'center';\r\n    });\r\n  });\r\n  // set the width of each column \r\n  for (var i = 0; i < 4; i++) {\r\n    sheet.col(i).width = 20;\r\n  }\r\n  file.saveAs('blob').then(function(content) {\r\n    saveAs(content, fileName + '.xlsx');\r\n  });\r\n\r\n  //  unfold the columns in order \r\n  function columnLine(column) {\r\n    column.map(ele => {\r\n      if (ele.children === undefined || ele.children.length === 0) {\r\n        columnLineArr.push(ele);\r\n      } else {\r\n        columnLine(ele.children);\r\n      }\r\n    });\r\n  }\r\n  //  initializes the header \r\n  function init(column, rowIndex, columnIndex) {\r\n    column.map((item, index) => {\r\n      let hCell = sheet.cell(rowIndex, columnIndex);\r\n      //  if there are no child elements,   all the columns \r\n      if (item.title === ' operation ') {\r\n        hCell.value = '';\r\n        return;\r\n      } else if (item.children === undefined || item.children.length === 0) {\r\n        //  add a cell to the first row \r\n        hCell.value = item.title;\r\n        hCell.vMerge = depth - rowIndex - 1;\r\n        hCell.style.align.h = 'center';\r\n        hCell.style.align.v = 'center';\r\n        columnIndex++;\r\n        // rowIndex++\r\n      } else {\r\n        let childrenNum = 0;\r\n        function getColumns(arr) {\r\n          arr.map(ele => {\r\n            if (ele.children) {\r\n              getColumns(ele.children);\r\n            } else {\r\n              childrenNum++;\r\n            }\r\n          });\r\n        }\r\n        getColumns(item.children);\r\n        hCell.hMerge = childrenNum - 1;\r\n        hCell.value = item.title;\r\n        hCell.style.align.h = 'center';\r\n        hCell.style.align.v = 'center';\r\n        let rowCopy = rowIndex;\r\n        rowCopy++;\r\n        init(item.children, rowCopy, columnIndex);\r\n        //  next cell start \r\n        columnIndex = columnIndex + childrenNum;\r\n      }\r\n    });\r\n  }\r\n  //  gets table head rows \r\n  function getDepth(arr) {\r\n    const eleDepths = [];\r\n    arr.forEach(ele => {\r\n      let depth = 0;\r\n      if (Array.isArray(ele.children)) {\r\n        depth = getDepth(ele.children);\r\n      }\r\n      eleDepths.push(depth);\r\n    });\r\n    return 1 + max(eleDepths);\r\n  }\r\n\r\n  function max(arr) {\r\n    return arr.reduce((accu, curr) => {\r\n      if (curr > accu) return curr;\r\n      return accu;\r\n    });\r\n  }\r\n  //  calculates the number of header columns \r\n  function getColumns(arr) {\r\n    let columnNum = 0;\r\n    arr.map(ele => {\r\n      if (ele.children) {\r\n        getColumns(ele.children);\r\n      } else {\r\n        columnNum++;\r\n      }\r\n    });\r\n    return columnNum;\r\n  }\r\n}\r\n\r\nexport default ExportExcel;","import { Select, Button, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Table } from 'ant-table-extensions';\r\nimport ExportExcel from './ExportTable';\r\nconst { Option } = Select;\r\n\r\n\r\nconst CpiReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(2019)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [finalData, setFinalData] = useState([])\r\n    const [yearList, setYearList] = useState([])\r\n    const [monthList, setMonthList] = useState([])\r\n    const [fromMonth, setFromMonth] = useState(1)\r\n    const [toMonth, setToMonth] = useState(1)\r\n    const [fromYear, setFromYear] = useState(2019)\r\n    const [toYear, setToYear] = useState(2020)\r\n\r\n    const [data, setData] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const fetchData = () => {\r\n        let url = `https://aic-group.bike/api/v1/dong-nai/cpi-report?month=${month}&year=${year}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { name, timeline, value, columns } = data\r\n                setYearList(data.year_list)\r\n                setMonthList(data.month_list)\r\n\r\n                setFinalData(data.data)\r\n                setColumns(columns)\r\n            })\r\n    }\r\n\r\n\r\n    const fetchFromToData = () => {\r\n        let url = `https://aic-group.bike/api/v1/dong-nai/cpi-report?fromMonth=${fromMonth}&fromYear=${fromYear}&toMonth=${toMonth}&toYear=${toYear}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { name, timeline, value, columns } = data\r\n                setYearList(data.year_list)\r\n                setMonthList(data.month_list)\r\n\r\n                setFinalData(data.data)\r\n                setColumns(columns)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running\")\r\n        if (timeType === \"single\") {\r\n            fetchData()\r\n        } else {\r\n            fetchFromToData()\r\n        }\r\n    }, [toggle])\r\n    const [timeType, setTimeType] = useState(\"single\")\r\n    return (\r\n        <div style={{marginBottom: \"200px\"}}>\r\n            <div className=\"radio\">\r\n                <Radio.Group value={timeType} onChange={(e) => {\r\n                    setTimeType(e.target.value)\r\n                }}>\r\n                    <Radio value=\"single\">Chọn Theo tháng</Radio>\r\n                    <Radio value=\"fromTo\">Chọn Theo khoảng</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"select\">\r\n                {(timeType === \"single\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                    <Select defaultValue={`${month}`} onChange={setMonth}>\r\n                        {monthList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Select defaultValue={`${year}`} onChange={setYear}>\r\n                        {yearList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                {(timeType === \"fromTo\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai </h4>\r\n                    <div className=\"from\" style={{ display: \"inline\" }}>\r\n                        <span>từ: </span>\r\n                        <Select defaultValue={`${fromMonth}`} onChange={setFromMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) > parseFloat(toMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${fromYear}`} onChange={setFromYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) <= parseFloat(toYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className=\"to\" style={{ display: \"inline\" }}>\r\n                        <span>đến: </span>\r\n                        <Select defaultValue={`${toMonth}`} onChange={setToMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) < parseFloat(fromMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${toYear}`} onChange={setToYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) >= parseFloat(fromYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                <Button onClick={() => {\r\n                    const title = (timeType === \"single\") ? `Chỉ số kim ngạch nhập khẩu vào tháng ${month}-${year}` : `Chỉ số kim ngạch nhập khẩu vào từ ${fromMonth}-${fromYear} đến ${toMonth}-${toYear}`\r\n                    ExportExcel(columns, finalData, title)\r\n                }}>Xuất dữ liệu</Button>\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={finalData}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 350 }}\r\n                searchable\r\n                searchableProps={{ debounce: true, fuzzySearch:true }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CpiReport;","import { Select, Button, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Table } from 'ant-table-extensions'\r\nimport ExportExcel from './ExportTable';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst IipReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(2019)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [finalData, setFinalData] = useState([])\r\n    const [yearList, setYearList] = useState([])\r\n    const [monthList, setMonthList] = useState([])\r\n    const [fromMonth, setFromMonth] = useState(1)\r\n    const [toMonth, setToMonth] = useState(1)\r\n    const [fromYear, setFromYear] = useState(2019)\r\n    const [toYear, setToYear] = useState(2020)\r\n\r\n    const [data, setData] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const fetchData = () => {\r\n\r\n        let url = (timeType === 'single') ? `https://aic-group.bike/api/v1/dong-nai/iip-report?month=${month}&year=${year}` :\r\n            `https://aic-group.bike/api/v1/dong-nai/iip-report?fromMonth=${fromMonth}&fromYear=${fromYear}&toMonth=${toMonth}&toYear=${toYear}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { name, timeline, columnsData, columns } = data\r\n                setYearList(data.year_list)\r\n                setMonthList(data.month_list)\r\n\r\n                setFinalData(columnsData)\r\n                setColumns(columns)\r\n            })\r\n    }\r\n\r\n\r\n    // const fetchFromToData = () => {\r\n    //     let url = `http://localhost:5000/api/v1/dong-nai/iip-report?fromMonth=${fromMonth}&fromYear=${fromYear}&toMonth=${toMonth}&toYear=${toYear}`\r\n    //     axios.get(url)\r\n    //         .then((response) => {\r\n    //             let data = response.data\r\n    //             const { name, timeline, value, columns } = data\r\n    //             setYearList(data.year_list)\r\n    //             setMonthList(data.month_list)\r\n    //             console.log(monthList)\r\n    //             console.log(yearList)\r\n\r\n    //             setFinalData(data.data)\r\n    //             setColumns(columns)\r\n    //         })\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running\")\r\n        fetchData()\r\n    }, [toggle])\r\n    const [timeType, setTimeType] = useState(\"single\")\r\n    return (\r\n        <div>\r\n            <div className=\"radio\">\r\n                <Radio.Group value={timeType} onChange={(e) => {\r\n                    setTimeType(e.target.value)\r\n                }}>\r\n                    <Radio value=\"single\">Chọn Theo tháng</Radio>\r\n                    <Radio value=\"fromTo\">Chọn Theo khoảng</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"select\">\r\n                {(timeType === \"single\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                    <Select defaultValue={`${month}`} onChange={setMonth}>\r\n                        {monthList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Select defaultValue={`${year}`} onChange={setYear}>\r\n                        {yearList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                {(timeType === \"fromTo\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai </h4>\r\n                    <div className=\"from\" style={{ display: \"inline\" }}>\r\n                        <span>từ: </span>\r\n                        <Select defaultValue={`${fromMonth}`} onChange={setFromMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) > parseFloat(toMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${fromYear}`} onChange={setFromYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) <= parseFloat(toYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className=\"to\" style={{ display: \"inline\" }}>\r\n                        <span>đến: </span>\r\n                        <Select defaultValue={`${toMonth}`} onChange={setToMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) < parseFloat(fromMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${toYear}`} onChange={setToYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) >= parseFloat(fromYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                <Button onClick={() => {\r\n                    const title = (timeType === \"single\") ? `Chỉ số kim ngạch nhập khẩu vào tháng ${month}-${year}` : `Chỉ số kim ngạch nhập khẩu vào từ ${fromMonth}-${fromYear} đến ${toMonth}-${toYear}`\r\n                    ExportExcel(columns, finalData, title)\r\n                }}>Xuất dữ liệu</Button>\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={finalData}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 350 }}\r\n                searchable\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IipReport;","import { Table, Select, Button, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport ExportExcel from './ExportTable';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst ImportReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(2019)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [finalData, setFinalData] = useState([])\r\n    const [yearList, setYearList] = useState([])\r\n    const [monthList, setMonthList] = useState([])\r\n    const [fromMonth, setFromMonth] = useState(1)\r\n    const [toMonth, setToMonth] = useState(1)\r\n    const [fromYear, setFromYear] = useState(2019)\r\n    const [toYear, setToYear] = useState(2020)\r\n\r\n    const [data, setData] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const fetchData = () => {\r\n\r\n        let url = (timeType === 'single') ? `http://localhost:5000/api/v1/dong-nai/import-report?month=${month}&year=${year}` :\r\n            `http://localhost:5000/api/v1/dong-nai/import-report?fromMonth=${fromMonth}&fromYear=${fromYear}&toMonth=${toMonth}&toYear=${toYear}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { year_list, month_list, columnsData, columns } = data\r\n                setYearList(data.year_list)\r\n                console.log(year_list, month_list)\r\n                setMonthList(data.month_list)\r\n                console.log(data.columns)\r\n                setFinalData(columnsData)\r\n                setColumns(columns)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running\")\r\n        fetchData()\r\n    }, [toggle])\r\n    const [timeType, setTimeType] = useState(\"single\")\r\n    return (\r\n        <div>\r\n            <div className=\"radio\">\r\n                <Radio.Group value={timeType} onChange={(e) => {\r\n                    setTimeType(e.target.value)\r\n                }}>\r\n                    <Radio value=\"single\">Chọn Theo tháng</Radio>\r\n                    <Radio value=\"fromTo\">Chọn Theo khoảng</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"select\">\r\n                {(timeType === \"single\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                    <Select defaultValue={`${month}`} onChange={setMonth}>\r\n                        {monthList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Select defaultValue={`${year}`} onChange={setYear}>\r\n                        {yearList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                {(timeType === \"fromTo\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai </h4>\r\n                    <div className=\"from\" style={{ display: \"inline\" }}>\r\n                        <span>từ: </span>\r\n                        <Select defaultValue={`${fromMonth}`} onChange={setFromMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) > parseFloat(toMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${fromYear}`} onChange={setFromYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) <= parseFloat(toYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className=\"to\" style={{ display: \"inline\" }}>\r\n                        <span>đến: </span>\r\n                        <Select defaultValue={`${toMonth}`} onChange={setToMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) < parseFloat(fromMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${toYear}`} onChange={setToYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) >= parseFloat(fromYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                <Button onClick={() => {\r\n                    const title = (timeType === \"single\") ? `Chỉ số kim ngạch nhập khẩu vào tháng ${month}-${year}` : `Chỉ số kim ngạch nhập khẩu vào từ ${fromMonth}-${fromYear} đến ${toMonth}-${toYear}`\r\n                    ExportExcel(columns, finalData, title)\r\n                }}>Xuất dữ liệu</Button>\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={finalData}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 350 }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImportReport;","import { Table, Select, Button, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport ExportExcel from './ExportTable';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst ExportReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(2019)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [finalData, setFinalData] = useState([])\r\n    const [yearList, setYearList] = useState([])\r\n    const [monthList, setMonthList] = useState([])\r\n    const [fromMonth, setFromMonth] = useState(1)\r\n    const [toMonth, setToMonth] = useState(1)\r\n    const [fromYear, setFromYear] = useState(2019)\r\n    const [toYear, setToYear] = useState(2020)\r\n\r\n    const [data, setData] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const fetchData = () => {\r\n\r\n        let url = (timeType === 'single') ? `http://localhost:5000/api/v1/dong-nai/export-report?month=${month}&year=${year}` :\r\n            `http://localhost:5000/api/v1/dong-nai/export-report?fromMonth=${fromMonth}&fromYear=${fromYear}&toMonth=${toMonth}&toYear=${toYear}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { year_list, month_list, columnsData, columns } = data\r\n                setYearList(data.year_list)\r\n                console.log(year_list, month_list)\r\n                setMonthList(data.month_list)\r\n                console.log(data.columns)\r\n                setFinalData(columnsData)\r\n                setColumns(columns)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running\")\r\n        fetchData()\r\n    }, [toggle])\r\n    const [timeType, setTimeType] = useState(\"single\")\r\n    return (\r\n        <div>\r\n            <div className=\"radio\">\r\n                <Radio.Group value={timeType} onChange={(e) => {\r\n                    setTimeType(e.target.value)\r\n                }}>\r\n                    <Radio value=\"single\">Chọn Theo tháng</Radio>\r\n                    <Radio value=\"fromTo\">Chọn Theo khoảng</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"select\">\r\n                {(timeType === \"single\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                    <Select defaultValue={`${month}`} onChange={setMonth}>\r\n                        {monthList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Select defaultValue={`${year}`} onChange={setYear}>\r\n                        {yearList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                {(timeType === \"fromTo\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai </h4>\r\n                    <div className=\"from\" style={{ display: \"inline\" }}>\r\n                        <span>từ: </span>\r\n                        <Select defaultValue={`${fromMonth}`} onChange={setFromMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) > parseFloat(toMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${fromYear}`} onChange={setFromYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) <= parseFloat(toYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className=\"to\" style={{ display: \"inline\" }}>\r\n                        <span>đến: </span>\r\n                        <Select defaultValue={`${toMonth}`} onChange={setToMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) < parseFloat(fromMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${toYear}`} onChange={setToYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) >= parseFloat(fromYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                <Button onClick={() => {\r\n                    const title = (timeType === \"single\") ? `Chỉ số kim ngạch nhập khẩu vào tháng ${month}-${year}` : `Chỉ số kim ngạch nhập khẩu vào từ ${fromMonth}-${fromYear} đến ${toMonth}-${toYear}`\r\n                    ExportExcel(columns, finalData, title)\r\n                }}>Xuất dữ liệu</Button>\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={finalData}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 350 }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExportReport;","import { Table, Select, Button, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport ExportExcel from './ExportTable';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst UnemploymentReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(2019)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [finalData, setFinalData] = useState([])\r\n    const [yearList, setYearList] = useState([])\r\n    const [monthList, setMonthList] = useState([])\r\n    const [fromMonth, setFromMonth] = useState(1)\r\n    const [toMonth, setToMonth] = useState(1)\r\n    const [fromYear, setFromYear] = useState(2019)\r\n    const [toYear, setToYear] = useState(2020)\r\n\r\n    const [data, setData] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const fetchData = () => {\r\n\r\n        let url = (timeType === 'single') ? `http://localhost:5000/api/v1/dong-nai/unemployment-report?year=${year}` :\r\n            `http://localhost:5000/api/v1/dong-nai/unemployment-report?fromYear=${fromYear}&toYear=${toYear}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { year_list, month_list, columnsData, columns } = data\r\n                setYearList(data.year_list)\r\n                console.log(data.columns)\r\n                setFinalData(columnsData)\r\n                setColumns(columns)\r\n                console.log(columnsData)\r\n                console.log(columns)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running\")\r\n        fetchData()\r\n    }, [toggle])\r\n    const [timeType, setTimeType] = useState(\"single\")\r\n    return (\r\n        <div>\r\n            <div className=\"radio\">\r\n                <Radio.Group value={timeType} onChange={(e) => {\r\n                    setTimeType(e.target.value)\r\n                }}>\r\n                    <Radio value=\"single\">Chọn Theo năm</Radio>\r\n                    <Radio value=\"fromTo\">Chọn Theo khoảng</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"select\">\r\n                {(timeType === \"single\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                    <Select defaultValue={`${year}`} onChange={setYear}>\r\n                        {yearList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                {(timeType === \"fromTo\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai </h4>\r\n                    <div className=\"from\" style={{ display: \"inline\" }}>\r\n                        <span>từ: </span>\r\n                        <Select defaultValue={`${fromYear}`} onChange={setFromYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) <= parseFloat(toYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className=\"to\" style={{ display: \"inline\" }}>\r\n                        <span>đến: </span>\r\n                        <Select defaultValue={`${toYear}`} onChange={setToYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) >= parseFloat(fromYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                <Button onClick={() => {\r\n                    const title = (timeType === 'single') ? `Dữ liệu chỉ số thất nghiệp năm ${year}` : `Dữ liệu chỉ số thất nghiệp từ ${fromYear} đến ${toYear}`\r\n                    ExportExcel(columns, finalData, title)\r\n                }}>Xuất dữ liệu</Button>\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={finalData}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 350 }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnemploymentReport;","import { Table, Select, Button, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport ExportExcel from './ExportTable';\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst ThuchiReport = () => {\r\n    const [month, setMonth] = useState(1)\r\n    const [year, setYear] = useState(19)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [finalData, setFinalData] = useState([])\r\n    const [yearList, setYearList] = useState([])\r\n    const [monthList, setMonthList] = useState([])\r\n    const [fromMonth, setFromMonth] = useState(1)\r\n    const [toMonth, setToMonth] = useState(1)\r\n    const [fromYear, setFromYear] = useState(19)\r\n    const [toYear, setToYear] = useState(20)\r\n\r\n    const [data, setData] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const fetchData = () => {\r\n\r\n        let url = (timeType === 'single') ? `http://localhost:5000/api/v1/dong-nai/revenue-report?month=${month}&year=${year}` :\r\n            `http://localhost:5000/api/v1/dong-nai/revenue-report?fromMonth=${fromMonth}&fromYear=${fromYear}&toMonth=${toMonth}&toYear=${toYear}`\r\n        axios.get(url)\r\n            .then((response) => {\r\n                let data = response.data\r\n                const { year_list, month_list, columnsData, columns } = data\r\n                console.log(data)\r\n                setYearList(data.year_list)\r\n                console.log(year_list, month_list)\r\n                setMonthList(data.month_list)\r\n                console.log(data.columns)\r\n                setFinalData(columnsData)\r\n                setColumns(columns)\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"running\")\r\n        fetchData()\r\n    }, [toggle])\r\n    const [timeType, setTimeType] = useState(\"single\")\r\n    return (\r\n        <div>\r\n            <div className=\"radio\">\r\n                <Radio.Group value={timeType} onChange={(e) => {\r\n                    setTimeType(e.target.value)\r\n                }}>\r\n                    <Radio value=\"single\">Chọn Theo tháng</Radio>\r\n                    <Radio value=\"fromTo\">Chọn Theo khoảng</Radio>\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"select\">\r\n                {(timeType === \"single\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai vào </h4>\r\n                    <Select defaultValue={`${month}`} onChange={setMonth}>\r\n                        {monthList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Select defaultValue={`${year}`} onChange={setYear}>\r\n                        {yearList.map((val) => {\r\n                            return <Option value={val}>{val}</Option>\r\n                        })}\r\n                    </Select>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                {(timeType === \"fromTo\") && <div style={{ display: \"inline\" }}>\r\n\r\n                    <h4 style={{ display: \"inline\" }}>Dữ liệu chỉ số giá tỉnh đồng nai </h4>\r\n                    <div className=\"from\" style={{ display: \"inline\" }}>\r\n                        <span>từ: </span>\r\n                        <Select defaultValue={`${fromMonth}`} onChange={setFromMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) > parseFloat(toMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${fromYear}`} onChange={setFromYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) <= parseFloat(toYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className=\"to\" style={{ display: \"inline\" }}>\r\n                        <span>đến: </span>\r\n                        <Select defaultValue={`${toMonth}`} onChange={setToMonth}>\r\n                            {monthList.map((val) => {\r\n                                if ((parseFloat(fromYear) == parseFloat(toYear)) && (parseFloat(val) < parseFloat(fromMonth))) {\r\n                                    return null\r\n                                } else {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n                        <Select defaultValue={`${toYear}`} onChange={setToYear}>\r\n                            {yearList.map((val) => {\r\n                                if (parseFloat(val) >= parseFloat(fromYear)) {\r\n                                    return <Option value={val}>{val}</Option>\r\n                                }\r\n                            })}\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <Button style={{ marginLeft: \"10px\" }} type={'primary'} onClick={() => {\r\n                        setToggle(!toggle)\r\n                    }}>Xem báo cáo</Button>\r\n                </div>}\r\n                <Button onClick={() => {\r\n                    const title = (timeType === \"single\") ? `Chỉ số kim ngạch nhập khẩu vào tháng ${month}-${year}` : `Chỉ số kim ngạch nhập khẩu vào từ ${fromMonth}-${fromYear} đến ${toMonth}-${toYear}`\r\n                    ExportExcel(columns, finalData, title)\r\n                }}>Xuất dữ liệu</Button>\r\n            </div>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={finalData}\r\n                bordered\r\n                size=\"middle\"\r\n                scroll={{ x: 'calc(600px + 50%)', y: 350 }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThuchiReport;","import React, { useEffect, useState } from 'react';\r\nimport { Collapse } from 'antd'\r\nimport axios from 'axios';\r\nimport { arrayTypeAnnotation } from '@babel/types';\r\nimport BaseReport from './BaseReport';\r\nimport CpiReport from './CpiReport';\r\nimport IipReport from './IipReport';\r\nimport ImportReport from './ImportReport';\r\nimport ExportReport from './ExportReport';\r\nimport UnemploymentReport from './UnemploymentReport';\r\nimport ThuchiReport from './ThuchiReport';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nconst FreqReport = (props) => {\r\n    const [data, setData] = useState({})\r\n\r\n    const fetchData = async () => {\r\n        // let url1 = (\"https://aic-group.bike/api/v1/dong-nai/cpies\")\r\n        // let url2 = (\"https://aic-group.bike/api/v1/dong-nai/iips\")\r\n        // let url3 = (\"https://aic-group.bike/api/v1/dong-nai/export\")\r\n        // let url4 = (\"https://aic-group.bike/api/v1/dong-nai/import\")\r\n        // let url5 = (\"https://aic-group.bike/api/v1/dong-nai/unemployment\")\r\n\r\n        // let dataStr = ['cpi', 'iip', 'import', 'export', 'unemployment']\r\n        // let getUrls = []\r\n        // Array.from([url1, url2, url3, url4, url5]).forEach((url) => {\r\n        //     getUrls.push(axios.get(url))\r\n        // })\r\n        // await axios.all(getUrls).then(\r\n        //     axios.spread((...allData) => {\r\n        //         console.log(allData)\r\n        //         let data = allData.map((value) => value.data)\r\n        //         setData(data)\r\n        //     })\r\n        // )\r\n        // console.log(data)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n    return (\r\n        <div className=\"freq-report\">\r\n            <h3>Báo cáo định kỳ các chỉ số kinh tế xã hội</h3>\r\n            <div className=\"indicator-list\">\r\n                {/* <ul>\r\n                    <li><a>Chỉ số giá tiêu dùng</a></li>\r\n                    <li><a>Chỉ số sản xuất công nghiệp</a></li>\r\n                    <li><a>Chỉ số kim ngạch xuất khẩu</a></li>\r\n                    <li><a>Chỉ số kim ngạch nhập khẩu</a></li>\r\n                    <li><a>Tỷ lệ thất nghiệp</a></li>\r\n                </ul> */}\r\n                <Collapse accordion>\r\n                    <Panel header=\"Chỉ số giá tiêu dùng\" key=\"1\">\r\n                        <CpiReport />\r\n                    </Panel>\r\n                    <Panel header=\"Chỉ số sản xuất công nghiệp\" key=\"2\">\r\n                        <IipReport />\r\n                    </Panel>\r\n                    <Panel header=\"Chỉ số kim ngạch xuất khẩu\" key=\"3\">\r\n                        <ExportReport />\r\n                    </Panel>\r\n                    <Panel header=\"Chỉ số kim ngạch nhập khẩu\" key=\"4\">\r\n                        <ImportReport />\r\n                    </Panel>\r\n                    <Panel header=\"Tỷ lệ thất nghiệp\" key=\"5\">\r\n                        <UnemploymentReport />\r\n                    </Panel>\r\n                    <Panel header=\"Thu chi ngân sách\" key=\"6\">\r\n                        <ThuchiReport />\r\n                    </Panel>\r\n                </Collapse>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FreqReport;","import React, { useEffect, useState } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Button } from 'antd';\r\nimport {\r\n    DashboardOutlined,\r\n    DatabaseOutlined,\r\n    ContainerOutlined,\r\n    SettingFilled,\r\n    CaretUpOutlined,\r\n    CaretDownOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined\r\n} from '@ant-design/icons';\r\nimport { List, Card } from 'antd';\r\nimport '../css/Submenu.css';\r\nimport StatisticGraph from '../graph/StatisticGraph';\r\nimport BarGraph from '../graph/VisExample';\r\n// import Example from '../graph/LineExample'\r\nimport CpiLineGraph from '../graph/CpiLineGraph';\r\nimport IipLineGraph from '../graph/IipLineGraph';\r\nimport ThuChiLineGraph from '../graph/ThuChiLineGraph';\r\nimport ImportLineGraph from '../graph/ImportLineGraph';\r\nimport ExportLineGraph from '../graph/ExportLineGraph';\r\nimport UnEmpLineGraph from '../graph/UnEmpLineGraph';\r\nimport CpiForecast from '../graph/forecast_graph/CpiForecast';\r\nimport ExportForecast from '../graph/forecast_graph/ExportForecast';\r\nimport ImportForecast from '../graph/forecast_graph/ImportForecast';\r\nimport IipForecast from '../graph/forecast_graph/IipForecast';\r\nimport axios from 'axios';\r\nimport FreqReport from '../report/FreqReport';\r\nimport 'antd/dist/antd.css'\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\nfunction Sub() {\r\n    const [content, setContent] = useState('');\r\n    const [selectedKey, setSelectedKey] = useState({ key: 'dash' });\r\n    const hideKeyList = [\"freq_report\", \"export_report\"]\r\n    const [width, setWidth] = useState(\"75px\")\r\n\r\n    const [data, setData] = useState([\r\n        {\r\n            title: 'CPI',\r\n            value: '2.61',\r\n            unit: '%'\r\n        },\r\n        {\r\n            title: 'IIP',\r\n            value: \"-1.75\",\r\n            unit: '%'\r\n\r\n        },\r\n        {\r\n            title: 'Tỷ lệ thất nghiệp',\r\n            value: '1.46',\r\n            unit: '%'\r\n        },\r\n        {\r\n            title: 'Nhập khẩu',\r\n            value: '-124.5',\r\n            unit: 'M VND'\r\n        },\r\n        {\r\n            title: 'Xuất khẩu',\r\n            value: '114.3',\r\n            unit: 'M VND'\r\n        },\r\n    ]);\r\n\r\n    const fetchData = React.useCallback(() => {\r\n        const getCurrentStatusUrl = \"https://aic-group.bike/api/v1/dong-nai/current-status\"\r\n        axios.get(getCurrentStatusUrl).then((response) => {\r\n            let resData = response.data.data\r\n            // console.log(data)\r\n            let tempData = []\r\n            resData.slice(0, -1).forEach((val, idx) => {\r\n                tempData.push({\r\n                    title: val.name,\r\n                    value: val.data,\r\n                    unit: '%'\r\n                })\r\n            })\r\n            let unEmpData = resData.at(-1)\r\n            console.log(tempData)\r\n            setData(tempData)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    })\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n    const [showSubMenu, setShowSubMenu] = useState(true)\r\n    return (\r\n        <div style={{\r\n            // display: \"flex\", clear: \"both\", marginTop: \"95px\",\r\n            // // fontFamily: \"AvenirNextLTPro-Regular\"\r\n            // fontFamily: \"arial\",\r\n        }}>\r\n\r\n            <Layout>\r\n\r\n                <Sider collapsible collapsed={showSubMenu}\r\n                    onCollapse={(val) => {\r\n                        // window.location.reload(false)\r\n                        if (width == \"75px\") {\r\n                            setWidth(\"25%\")\r\n                        } else setWidth(\"75px\")\r\n                        \r\n                        setShowSubMenu(val)\r\n                    }}\r\n                    width={\"25%\"} className=\"site-layout-background line\" style={{\r\n                    }}\r\n                >\r\n                    <div style={{display:\"fixed\"}}>\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            defaultSelectedKeys={['dash']}\r\n                            defaultOpenKeys={['data']}\r\n                            style={{ height: '100%', borderRight: 0, minHeight: \"88vh\" }}\r\n                            onSelect={(e) => {\r\n                                setSelectedKey(e)\r\n                            }}\r\n                        >\r\n                            <Menu.Item key=\"dash\" icon={<DashboardOutlined />} title=\"Dashboard\">DashBoard</Menu.Item>\r\n                            <SubMenu key=\"data\" icon={<DatabaseOutlined />} title=\"Thống kê các chỉ số kinh tế xã hội\">\r\n                                <Menu.Item key=\"cpies\" title=\"Chỉ số giá tiêu dùng\">Chỉ số giá tiêu dùng (cpi)</Menu.Item>\r\n                                <Menu.Item key=\"iips\" title=\"Chỉ số sản xuất công nghiệp\">Chỉ số sản xuất công nghiệp (iip)</Menu.Item>\r\n                                <Menu.Item key=\"unemployment\" title=\"Tỷ lệ thất nghiệp\">Tỷ lệ thất nghiệp</Menu.Item>\r\n                                <Menu.Item key=\"export\" title=\"Kim ngạch xuất khẩu\">Kim ngạch xuất khẩu</Menu.Item>\r\n                                <Menu.Item key=\"import\" title=\"Kim ngạch nhập khẩu\">Kim ngạch nhập khẩu</Menu.Item>\r\n                                <Menu.Item key=\"thuchi\" title=\"Thu chi ngân sách\">Thu Chi ngân sách</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu key=\"model\" icon={<SettingFilled />} title=\"Các mô hình dự báo\">\r\n                                <Menu.Item key=\"cpi_model\" title=\"Dự báo chỉ số giá tiêu dùng\">Dự báo chỉ số giá tiêu dùng</Menu.Item>\r\n                                <Menu.Item key=\"iip_model\" title=\"Dự báo chỉ số sản xuất công nghiệp\">Dự báo chỉ số sản xuất công nghiệp</Menu.Item>\r\n                                <Menu.Item key=\"import_model\" title=\"Dự báo kim ngạch nhập khẩu\">Dự báo kim ngạch nhập khẩu</Menu.Item>\r\n                                <Menu.Item key=\"export_model\" title=\"Dự báo kim ngạch xuất khẩu\">Dự báo kim ngạch xuất khẩu</Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu key=\"report\" icon={<ContainerOutlined />} title=\"Báo cáo\">\r\n                                <Menu.Item key=\"freq_report\" title=\"Báo cáo định kỳ\">Báo cáo định kỳ</Menu.Item>\r\n                                {/* <Menu.Item key=\"export_report\" title=\"Xuất báo cáo\">Xuất báo cáo</Menu.Item> */}\r\n                            </SubMenu>\r\n                        </Menu>\r\n                    </div>\r\n                </Sider>\r\n\r\n                 \r\n                <Layout style={{ padding: '0 12px 12px', marginTop:\"100px\", marginLeft:`${width}` }}>\r\n                    <Content\r\n                        className=\"site-layout-background site-content\"\r\n                        style={{\r\n                            // padding: 12,\r\n                            // margin: 0,\r\n                            // fontSize: 12,\r\n                        }}\r\n\r\n                    >\r\n                        <header>\r\n                            <ul>\r\n                                {(!hideKeyList.includes(selectedKey.key)) && data.map((item, id) => {\r\n                                    return (\r\n                                        <li className=\"box-shadow\">\r\n                                            <h3 style={{ margin: \"0px\", fontFamily: \"candara\", color: \"inherit\" }}>{item.title}</h3>\r\n                                            <div style={{ display: \"flex\", float: \"right\", color: \"inherit\" }}>\r\n                                                <div>\r\n                                                    {(parseFloat(item.value) > 0) ? <CaretUpOutlined className=\"icon\" /> : <CaretDownOutlined className=\"icon\" style={{ color: \"red\" }} />}\r\n                                                </div>\r\n                                                <div>{item.value} {item.unit}</div>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </header>\r\n                        <div style={{ width: \"100%\" }} className=\"graph-content\">\r\n                            {(selectedKey.key === 'dash') ? <StatisticGraph /> : ''}\r\n                            {selectedKey.key == 'cpies' ? <CpiLineGraph title={(selectedKey) ? selectedKey.item.props.title : ''} width={width} /> : ''}\r\n                            {selectedKey.key == 'iips' ? <IipLineGraph title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'thuchi' ? <ThuChiLineGraph title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'import' ? <ImportLineGraph title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'export' ? <ExportLineGraph title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'unemployment' ? <UnEmpLineGraph title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'cpi_model' ? <CpiForecast title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'export_model' ? <ExportForecast title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'import_model' ? <ImportForecast title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'iip_model' ? <IipForecast title={(selectedKey) ? selectedKey.item.props.title : ''} /> : ''}\r\n                            {selectedKey.key == 'freq_report' ? <FreqReport /> : ''}\r\n                            {/* {selectedKey.key == 'export_report' ? <div>Export Report</div> : ''} */}\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Sub;\r\n\r\n","import './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout } from 'antd';\r\n\r\nimport AppHeader from './components/common/header';\r\nimport AppFooter from './components/common/footer';\r\nimport AppHome from './views/home';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport LoginForm from './components/login/LoginForm';\r\nimport { useEffect, useState } from 'react';\r\nimport Sub from './components/common/submenu';\r\nimport Background from '../src/assets/images/bg-color.jpg';\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(false);\r\n  useEffect(() => {\r\n    const key = localStorage.getItem(\"token\")\r\n    if (key) {\r\n      setToken(true)\r\n    }\r\n  }, [])\r\n  if (token === false) {\r\n    return <LoginForm setToken={setToken} />\r\n  } else return (\r\n\r\n\r\n    <Router>\r\n      <Layout className=\"mainLayout\">\r\n        <Header>\r\n          <AppHeader setToken={setToken} />\r\n        </Header>\r\n        <Content>\r\n\r\n          <Switch>\r\n            <Route exact path='/' render={() => {\r\n              return (\r\n                <div>\r\n                  <AppHome />\r\n                  <Footer>\r\n                    <AppFooter />\r\n                  </Footer>\r\n                </div>\r\n              )\r\n            }} />\r\n            <Route path=\"/login\" component={LoginForm} />\r\n            <Route exact path='/sub-menu' render={() => {\r\n              return (\r\n                <Sub />\r\n              )\r\n            }} />\r\n          </Switch>\r\n        </Content>\r\n        {/* <Footer>\r\n          <AppFooter />\r\n        </Footer> */}\r\n      </Layout>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/bg-color.c4ff524e.jpg\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}